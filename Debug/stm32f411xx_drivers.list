
stm32f411xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000007e8  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000980  08000980  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000980  08000980  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08000980  08000980  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000980  08000980  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000980  08000980  00010980  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000984  08000984  00010984  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000988  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  0800098c  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  0800098c  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a1a  00000000  00000000  00020077  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002ba  00000000  00000000  00020a91  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00020d50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008d  00000000  00000000  00020e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002213  00000000  00000000  00020ea5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001169  00000000  00000000  000230b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008bc9  00000000  00000000  00024221  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000288  00000000  00000000  0002cdec  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006b  00000000  00000000  0002d074  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000004 	.word	0x20000004
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000968 	.word	0x08000968

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000008 	.word	0x20000008
 80001d4:	08000968 	.word	0x08000968

080001d8 <GPIO_PeriClockCtrl>:

/*
 * APIs supported by this driver
 */

void GPIO_PeriClockCtrl(GPIO_RegDef_t *pGPIOx, uint8_t state){
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
 80001e0:	460b      	mov	r3, r1
 80001e2:	70fb      	strb	r3, [r7, #3]
	if (state == ENABLE) {
 80001e4:	78fb      	ldrb	r3, [r7, #3]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d135      	bne.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		if (pGPIOx == GPIOA) {
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a1d      	ldr	r2, [pc, #116]	; (8000264 <GPIO_PeriClockCtrl+0x8c>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d106      	bne.n	8000200 <GPIO_PeriClockCtrl+0x28>
			GPIOA_PCLK_EN();
 80001f2:	4b1d      	ldr	r3, [pc, #116]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 80001f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f6:	4a1c      	ldr	r2, [pc, #112]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 80001f8:	f043 0301 	orr.w	r3, r3, #1
 80001fc:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOE_PCLK_EN();
		}else {
			/*do nothing*/
		}
	}
}
 80001fe:	e02a      	b.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		} else if (pGPIOx == GPIOB) {
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	4a1a      	ldr	r2, [pc, #104]	; (800026c <GPIO_PeriClockCtrl+0x94>)
 8000204:	4293      	cmp	r3, r2
 8000206:	d106      	bne.n	8000216 <GPIO_PeriClockCtrl+0x3e>
			GPIOB_PCLK_EN();
 8000208:	4b17      	ldr	r3, [pc, #92]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 800020a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020c:	4a16      	ldr	r2, [pc, #88]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 800020e:	f043 0302 	orr.w	r3, r3, #2
 8000212:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000214:	e01f      	b.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		} else if (pGPIOx == GPIOC) {
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a15      	ldr	r2, [pc, #84]	; (8000270 <GPIO_PeriClockCtrl+0x98>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeriClockCtrl+0x54>
			GPIOC_PCLK_EN();
 800021e:	4b12      	ldr	r3, [pc, #72]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a11      	ldr	r2, [pc, #68]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 8000224:	f043 0304 	orr.w	r3, r3, #4
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
}
 800022a:	e014      	b.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		} else if (pGPIOx == GPIOD) {
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a11      	ldr	r2, [pc, #68]	; (8000274 <GPIO_PeriClockCtrl+0x9c>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeriClockCtrl+0x6a>
			GPIOD_PCLK_EN();
 8000234:	4b0c      	ldr	r3, [pc, #48]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a0b      	ldr	r2, [pc, #44]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 800023a:	f043 0308 	orr.w	r3, r3, #8
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e009      	b.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		} else if (pGPIOx == GPIOE) {
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a0c      	ldr	r2, [pc, #48]	; (8000278 <GPIO_PeriClockCtrl+0xa0>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d105      	bne.n	8000256 <GPIO_PeriClockCtrl+0x7e>
			GPIOE_PCLK_EN();
 800024a:	4b07      	ldr	r3, [pc, #28]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a06      	ldr	r2, [pc, #24]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 8000250:	f043 0310 	orr.w	r3, r3, #16
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	bf00      	nop
 8000258:	370c      	adds	r7, #12
 800025a:	46bd      	mov	sp, r7
 800025c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000260:	4770      	bx	lr
 8000262:	bf00      	nop
 8000264:	40020000 	.word	0x40020000
 8000268:	40023800 	.word	0x40023800
 800026c:	40020400 	.word	0x40020400
 8000270:	40020800 	.word	0x40020800
 8000274:	40020c00 	.word	0x40020c00
 8000278:	40021000 	.word	0x40021000

0800027c <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandler) {
 800027c:	b480      	push	{r7}
 800027e:	b085      	sub	sp, #20
 8000280:	af00      	add	r7, sp, #0
 8000282:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; /*temporary register*/
 8000284:	2300      	movs	r3, #0
 8000286:	60fb      	str	r3, [r7, #12]
	uint8_t reg_selection = 0;
 8000288:	2300      	movs	r3, #0
 800028a:	72fb      	strb	r3, [r7, #11]
	uint8_t pin_selection = 0;
 800028c:	2300      	movs	r3, #0
 800028e:	72bb      	strb	r3, [r7, #10]
	uint8_t port_order = 0;
 8000290:	2300      	movs	r3, #0
 8000292:	727b      	strb	r3, [r7, #9]

	/* 1. configuration gpio pin mode */
	if (pGPIOHandler->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	795b      	ldrb	r3, [r3, #5]
 8000298:	2b03      	cmp	r3, #3
 800029a:	d81f      	bhi.n	80002dc <GPIO_Init+0x60>
		temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	795b      	ldrb	r3, [r3, #5]
 80002a0:	461a      	mov	r2, r3
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	791b      	ldrb	r3, [r3, #4]
 80002a6:	005b      	lsls	r3, r3, #1
 80002a8:	fa02 f303 	lsl.w	r3, r2, r3
 80002ac:	60fb      	str	r3, [r7, #12]
		pGPIOHandler->pGPIO->MODER &= ~(0x03 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	681a      	ldr	r2, [r3, #0]
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	791b      	ldrb	r3, [r3, #4]
 80002b8:	4619      	mov	r1, r3
 80002ba:	2303      	movs	r3, #3
 80002bc:	408b      	lsls	r3, r1
 80002be:	43db      	mvns	r3, r3
 80002c0:	4619      	mov	r1, r3
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	400a      	ands	r2, r1
 80002c8:	601a      	str	r2, [r3, #0]
		pGPIOHandler->pGPIO->MODER |= temp;
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	6819      	ldr	r1, [r3, #0]
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	68fa      	ldr	r2, [r7, #12]
 80002d6:	430a      	orrs	r2, r1
 80002d8:	601a      	str	r2, [r3, #0]
 80002da:	e0c9      	b.n	8000470 <GPIO_Init+0x1f4>

	} else {
		/*interrupt mode*/
		if ( pGPIOHandler->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	795b      	ldrb	r3, [r3, #5]
 80002e0:	2b05      	cmp	r3, #5
 80002e2:	d117      	bne.n	8000314 <GPIO_Init+0x98>
			/* Configuration for Falling Edge IT */
			/* 1. Enable EXTI_FTSR */
			EXTI->FTSR |= (1 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80002e4:	4b4e      	ldr	r3, [pc, #312]	; (8000420 <GPIO_Init+0x1a4>)
 80002e6:	68db      	ldr	r3, [r3, #12]
 80002e8:	687a      	ldr	r2, [r7, #4]
 80002ea:	7912      	ldrb	r2, [r2, #4]
 80002ec:	4611      	mov	r1, r2
 80002ee:	2201      	movs	r2, #1
 80002f0:	408a      	lsls	r2, r1
 80002f2:	4611      	mov	r1, r2
 80002f4:	4a4a      	ldr	r2, [pc, #296]	; (8000420 <GPIO_Init+0x1a4>)
 80002f6:	430b      	orrs	r3, r1
 80002f8:	60d3      	str	r3, [r2, #12]
			/* 2. Clear the corresponding RTSR */
			EXTI->RTSR &= ~(1 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80002fa:	4b49      	ldr	r3, [pc, #292]	; (8000420 <GPIO_Init+0x1a4>)
 80002fc:	689b      	ldr	r3, [r3, #8]
 80002fe:	687a      	ldr	r2, [r7, #4]
 8000300:	7912      	ldrb	r2, [r2, #4]
 8000302:	4611      	mov	r1, r2
 8000304:	2201      	movs	r2, #1
 8000306:	408a      	lsls	r2, r1
 8000308:	43d2      	mvns	r2, r2
 800030a:	4611      	mov	r1, r2
 800030c:	4a44      	ldr	r2, [pc, #272]	; (8000420 <GPIO_Init+0x1a4>)
 800030e:	400b      	ands	r3, r1
 8000310:	6093      	str	r3, [r2, #8]
 8000312:	e035      	b.n	8000380 <GPIO_Init+0x104>

		} else if (pGPIOHandler->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT ) {
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	795b      	ldrb	r3, [r3, #5]
 8000318:	2b04      	cmp	r3, #4
 800031a:	d117      	bne.n	800034c <GPIO_Init+0xd0>
			/* Configuration for Rising Edge IT*/
			/* 1. Enable EXTI_RTSR */
			EXTI->RTSR |= (1 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800031c:	4b40      	ldr	r3, [pc, #256]	; (8000420 <GPIO_Init+0x1a4>)
 800031e:	689b      	ldr	r3, [r3, #8]
 8000320:	687a      	ldr	r2, [r7, #4]
 8000322:	7912      	ldrb	r2, [r2, #4]
 8000324:	4611      	mov	r1, r2
 8000326:	2201      	movs	r2, #1
 8000328:	408a      	lsls	r2, r1
 800032a:	4611      	mov	r1, r2
 800032c:	4a3c      	ldr	r2, [pc, #240]	; (8000420 <GPIO_Init+0x1a4>)
 800032e:	430b      	orrs	r3, r1
 8000330:	6093      	str	r3, [r2, #8]
			/* 2. Clear the corresponding FTSR */
			EXTI->FTSR &= ~(1 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 8000332:	4b3b      	ldr	r3, [pc, #236]	; (8000420 <GPIO_Init+0x1a4>)
 8000334:	68db      	ldr	r3, [r3, #12]
 8000336:	687a      	ldr	r2, [r7, #4]
 8000338:	7912      	ldrb	r2, [r2, #4]
 800033a:	4611      	mov	r1, r2
 800033c:	2201      	movs	r2, #1
 800033e:	408a      	lsls	r2, r1
 8000340:	43d2      	mvns	r2, r2
 8000342:	4611      	mov	r1, r2
 8000344:	4a36      	ldr	r2, [pc, #216]	; (8000420 <GPIO_Init+0x1a4>)
 8000346:	400b      	ands	r3, r1
 8000348:	60d3      	str	r3, [r2, #12]
 800034a:	e019      	b.n	8000380 <GPIO_Init+0x104>

		} else if (pGPIOHandler->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT ) {
 800034c:	687b      	ldr	r3, [r7, #4]
 800034e:	795b      	ldrb	r3, [r3, #5]
 8000350:	2b06      	cmp	r3, #6
 8000352:	d115      	bne.n	8000380 <GPIO_Init+0x104>
			/* Configuration for Rising and Falling Edge IT*/
			/* 1. Enable EXTI_RTSR */
			EXTI->RTSR |= (1 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 8000354:	4b32      	ldr	r3, [pc, #200]	; (8000420 <GPIO_Init+0x1a4>)
 8000356:	689b      	ldr	r3, [r3, #8]
 8000358:	687a      	ldr	r2, [r7, #4]
 800035a:	7912      	ldrb	r2, [r2, #4]
 800035c:	4611      	mov	r1, r2
 800035e:	2201      	movs	r2, #1
 8000360:	408a      	lsls	r2, r1
 8000362:	4611      	mov	r1, r2
 8000364:	4a2e      	ldr	r2, [pc, #184]	; (8000420 <GPIO_Init+0x1a4>)
 8000366:	430b      	orrs	r3, r1
 8000368:	6093      	str	r3, [r2, #8]
			/* 2. Enable EXTI_FTSR */
			EXTI->FTSR |= (1 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800036a:	4b2d      	ldr	r3, [pc, #180]	; (8000420 <GPIO_Init+0x1a4>)
 800036c:	68db      	ldr	r3, [r3, #12]
 800036e:	687a      	ldr	r2, [r7, #4]
 8000370:	7912      	ldrb	r2, [r2, #4]
 8000372:	4611      	mov	r1, r2
 8000374:	2201      	movs	r2, #1
 8000376:	408a      	lsls	r2, r1
 8000378:	4611      	mov	r1, r2
 800037a:	4a29      	ldr	r2, [pc, #164]	; (8000420 <GPIO_Init+0x1a4>)
 800037c:	430b      	orrs	r3, r1
 800037e:	60d3      	str	r3, [r2, #12]
		}

		/* 2. Configure the GPIO port Selection in SYSCFG_EXTICR */
		reg_selection = pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	791b      	ldrb	r3, [r3, #4]
 8000384:	089b      	lsrs	r3, r3, #2
 8000386:	72fb      	strb	r3, [r7, #11]
		port_order = pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000388:	687b      	ldr	r3, [r7, #4]
 800038a:	791b      	ldrb	r3, [r3, #4]
 800038c:	f003 0303 	and.w	r3, r3, #3
 8000390:	727b      	strb	r3, [r7, #9]
		SYSCFG_PCLK_EN();
 8000392:	4b24      	ldr	r3, [pc, #144]	; (8000424 <GPIO_Init+0x1a8>)
 8000394:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000396:	4a23      	ldr	r2, [pc, #140]	; (8000424 <GPIO_Init+0x1a8>)
 8000398:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800039c:	6453      	str	r3, [r2, #68]	; 0x44
		/* clear bit */
		SYSCFG->EXTICRx[reg_selection] &= ~( 0xF << (port_order*4) );
 800039e:	4a22      	ldr	r2, [pc, #136]	; (8000428 <GPIO_Init+0x1ac>)
 80003a0:	7afb      	ldrb	r3, [r7, #11]
 80003a2:	3302      	adds	r3, #2
 80003a4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003a8:	7a7b      	ldrb	r3, [r7, #9]
 80003aa:	009b      	lsls	r3, r3, #2
 80003ac:	210f      	movs	r1, #15
 80003ae:	fa01 f303 	lsl.w	r3, r1, r3
 80003b2:	43db      	mvns	r3, r3
 80003b4:	4618      	mov	r0, r3
 80003b6:	491c      	ldr	r1, [pc, #112]	; (8000428 <GPIO_Init+0x1ac>)
 80003b8:	7afb      	ldrb	r3, [r7, #11]
 80003ba:	4002      	ands	r2, r0
 80003bc:	3302      	adds	r3, #2
 80003be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		/* set bit */
		SYSCFG->EXTICRx[reg_selection] |= ( (GPIO_BASEADDR_2_CODE(pGPIOHandler->pGPIO)) << (port_order*4) );
 80003c2:	4a19      	ldr	r2, [pc, #100]	; (8000428 <GPIO_Init+0x1ac>)
 80003c4:	7afb      	ldrb	r3, [r7, #11]
 80003c6:	3302      	adds	r3, #2
 80003c8:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	4916      	ldr	r1, [pc, #88]	; (800042c <GPIO_Init+0x1b0>)
 80003d2:	428b      	cmp	r3, r1
 80003d4:	d036      	beq.n	8000444 <GPIO_Init+0x1c8>
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	681b      	ldr	r3, [r3, #0]
 80003da:	4915      	ldr	r1, [pc, #84]	; (8000430 <GPIO_Init+0x1b4>)
 80003dc:	428b      	cmp	r3, r1
 80003de:	d01d      	beq.n	800041c <GPIO_Init+0x1a0>
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	4913      	ldr	r1, [pc, #76]	; (8000434 <GPIO_Init+0x1b8>)
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d016      	beq.n	8000418 <GPIO_Init+0x19c>
 80003ea:	687b      	ldr	r3, [r7, #4]
 80003ec:	681b      	ldr	r3, [r3, #0]
 80003ee:	4912      	ldr	r1, [pc, #72]	; (8000438 <GPIO_Init+0x1bc>)
 80003f0:	428b      	cmp	r3, r1
 80003f2:	d00f      	beq.n	8000414 <GPIO_Init+0x198>
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	681b      	ldr	r3, [r3, #0]
 80003f8:	4910      	ldr	r1, [pc, #64]	; (800043c <GPIO_Init+0x1c0>)
 80003fa:	428b      	cmp	r3, r1
 80003fc:	d008      	beq.n	8000410 <GPIO_Init+0x194>
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	681b      	ldr	r3, [r3, #0]
 8000402:	490f      	ldr	r1, [pc, #60]	; (8000440 <GPIO_Init+0x1c4>)
 8000404:	428b      	cmp	r3, r1
 8000406:	d101      	bne.n	800040c <GPIO_Init+0x190>
 8000408:	2307      	movs	r3, #7
 800040a:	e01c      	b.n	8000446 <GPIO_Init+0x1ca>
 800040c:	2300      	movs	r3, #0
 800040e:	e01a      	b.n	8000446 <GPIO_Init+0x1ca>
 8000410:	2304      	movs	r3, #4
 8000412:	e018      	b.n	8000446 <GPIO_Init+0x1ca>
 8000414:	2303      	movs	r3, #3
 8000416:	e016      	b.n	8000446 <GPIO_Init+0x1ca>
 8000418:	2302      	movs	r3, #2
 800041a:	e014      	b.n	8000446 <GPIO_Init+0x1ca>
 800041c:	2301      	movs	r3, #1
 800041e:	e012      	b.n	8000446 <GPIO_Init+0x1ca>
 8000420:	40013c00 	.word	0x40013c00
 8000424:	40023800 	.word	0x40023800
 8000428:	40013800 	.word	0x40013800
 800042c:	40020000 	.word	0x40020000
 8000430:	40020400 	.word	0x40020400
 8000434:	40020800 	.word	0x40020800
 8000438:	40020c00 	.word	0x40020c00
 800043c:	40021000 	.word	0x40021000
 8000440:	40021c00 	.word	0x40021c00
 8000444:	2300      	movs	r3, #0
 8000446:	7a79      	ldrb	r1, [r7, #9]
 8000448:	0089      	lsls	r1, r1, #2
 800044a:	408b      	lsls	r3, r1
 800044c:	4618      	mov	r0, r3
 800044e:	495a      	ldr	r1, [pc, #360]	; (80005b8 <GPIO_Init+0x33c>)
 8000450:	7afb      	ldrb	r3, [r7, #11]
 8000452:	4302      	orrs	r2, r0
 8000454:	3302      	adds	r3, #2
 8000456:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		/* 3. Enable EXTI interrupt delivery using IMR by un-masking bit
		 * *only un-mask the corresponding interrupt line
		 */
		EXTI->IMR |= 1 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber;
 800045a:	4b58      	ldr	r3, [pc, #352]	; (80005bc <GPIO_Init+0x340>)
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	687a      	ldr	r2, [r7, #4]
 8000460:	7912      	ldrb	r2, [r2, #4]
 8000462:	4611      	mov	r1, r2
 8000464:	2201      	movs	r2, #1
 8000466:	408a      	lsls	r2, r1
 8000468:	4611      	mov	r1, r2
 800046a:	4a54      	ldr	r2, [pc, #336]	; (80005bc <GPIO_Init+0x340>)
 800046c:	430b      	orrs	r3, r1
 800046e:	6013      	str	r3, [r2, #0]

	}
	temp = 0;
 8000470:	2300      	movs	r3, #0
 8000472:	60fb      	str	r3, [r7, #12]

	/* 2. configuration gpio pin speed */
	temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	799b      	ldrb	r3, [r3, #6]
 8000478:	461a      	mov	r2, r3
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	791b      	ldrb	r3, [r3, #4]
 800047e:	005b      	lsls	r3, r3, #1
 8000480:	fa02 f303 	lsl.w	r3, r2, r3
 8000484:	60fb      	str	r3, [r7, #12]
	pGPIOHandler->pGPIO->OSPEEDR &= ~(0x03 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	681b      	ldr	r3, [r3, #0]
 800048a:	689a      	ldr	r2, [r3, #8]
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	791b      	ldrb	r3, [r3, #4]
 8000490:	4619      	mov	r1, r3
 8000492:	2303      	movs	r3, #3
 8000494:	408b      	lsls	r3, r1
 8000496:	43db      	mvns	r3, r3
 8000498:	4619      	mov	r1, r3
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	400a      	ands	r2, r1
 80004a0:	609a      	str	r2, [r3, #8]
	pGPIOHandler->pGPIO->OSPEEDR |= temp;
 80004a2:	687b      	ldr	r3, [r7, #4]
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	6899      	ldr	r1, [r3, #8]
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	68fa      	ldr	r2, [r7, #12]
 80004ae:	430a      	orrs	r2, r1
 80004b0:	609a      	str	r2, [r3, #8]
	temp = 0;
 80004b2:	2300      	movs	r3, #0
 80004b4:	60fb      	str	r3, [r7, #12]

	/* 3. configuration gpio pin pu/pd */
	temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinPuPdCtrl << (2 * pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	79db      	ldrb	r3, [r3, #7]
 80004ba:	461a      	mov	r2, r3
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	791b      	ldrb	r3, [r3, #4]
 80004c0:	005b      	lsls	r3, r3, #1
 80004c2:	fa02 f303 	lsl.w	r3, r2, r3
 80004c6:	60fb      	str	r3, [r7, #12]
	pGPIOHandler->pGPIO->PUPDR &= ~(0x03 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	68da      	ldr	r2, [r3, #12]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	791b      	ldrb	r3, [r3, #4]
 80004d2:	4619      	mov	r1, r3
 80004d4:	2303      	movs	r3, #3
 80004d6:	408b      	lsls	r3, r1
 80004d8:	43db      	mvns	r3, r3
 80004da:	4619      	mov	r1, r3
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	400a      	ands	r2, r1
 80004e2:	60da      	str	r2, [r3, #12]
	pGPIOHandler->pGPIO->PUPDR |= temp;
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	68d9      	ldr	r1, [r3, #12]
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	681b      	ldr	r3, [r3, #0]
 80004ee:	68fa      	ldr	r2, [r7, #12]
 80004f0:	430a      	orrs	r2, r1
 80004f2:	60da      	str	r2, [r3, #12]
	temp = 0;
 80004f4:	2300      	movs	r3, #0
 80004f6:	60fb      	str	r3, [r7, #12]

	/* 4. configuration gpio pin output type */
	temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinOutputType << (pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80004f8:	687b      	ldr	r3, [r7, #4]
 80004fa:	7a1b      	ldrb	r3, [r3, #8]
 80004fc:	461a      	mov	r2, r3
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	791b      	ldrb	r3, [r3, #4]
 8000502:	fa02 f303 	lsl.w	r3, r2, r3
 8000506:	60fb      	str	r3, [r7, #12]
	pGPIOHandler->pGPIO->OTYPER &= ~(0x01 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	685a      	ldr	r2, [r3, #4]
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	791b      	ldrb	r3, [r3, #4]
 8000512:	4619      	mov	r1, r3
 8000514:	2301      	movs	r3, #1
 8000516:	408b      	lsls	r3, r1
 8000518:	43db      	mvns	r3, r3
 800051a:	4619      	mov	r1, r3
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	681b      	ldr	r3, [r3, #0]
 8000520:	400a      	ands	r2, r1
 8000522:	605a      	str	r2, [r3, #4]
	pGPIOHandler->pGPIO->OTYPER |= temp;
 8000524:	687b      	ldr	r3, [r7, #4]
 8000526:	681b      	ldr	r3, [r3, #0]
 8000528:	6859      	ldr	r1, [r3, #4]
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	68fa      	ldr	r2, [r7, #12]
 8000530:	430a      	orrs	r2, r1
 8000532:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000534:	2300      	movs	r3, #0
 8000536:	60fb      	str	r3, [r7, #12]

	/* 5. configuration gpio pin alternate function */
	if (pGPIOHandler->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	795b      	ldrb	r3, [r3, #5]
 800053c:	2b02      	cmp	r3, #2
 800053e:	d132      	bne.n	80005a6 <GPIO_Init+0x32a>
		reg_selection = pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber / 8; /*total pin = 16*/
 8000540:	687b      	ldr	r3, [r7, #4]
 8000542:	791b      	ldrb	r3, [r3, #4]
 8000544:	08db      	lsrs	r3, r3, #3
 8000546:	72fb      	strb	r3, [r7, #11]
		pin_selection = pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000548:	687b      	ldr	r3, [r7, #4]
 800054a:	791b      	ldrb	r3, [r3, #4]
 800054c:	f003 0307 	and.w	r3, r3, #7
 8000550:	72bb      	strb	r3, [r7, #10]
		temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinAltFuncMode << (4 * pin_selection);
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	7a5b      	ldrb	r3, [r3, #9]
 8000556:	461a      	mov	r2, r3
 8000558:	7abb      	ldrb	r3, [r7, #10]
 800055a:	009b      	lsls	r3, r3, #2
 800055c:	fa02 f303 	lsl.w	r3, r2, r3
 8000560:	60fb      	str	r3, [r7, #12]
		pGPIOHandler->pGPIO->AFR[reg_selection] &= ~(0b1111 << (4 * pin_selection));
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	7afa      	ldrb	r2, [r7, #11]
 8000568:	3208      	adds	r2, #8
 800056a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800056e:	7abb      	ldrb	r3, [r7, #10]
 8000570:	009b      	lsls	r3, r3, #2
 8000572:	220f      	movs	r2, #15
 8000574:	fa02 f303 	lsl.w	r3, r2, r3
 8000578:	43db      	mvns	r3, r3
 800057a:	4618      	mov	r0, r3
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	7afa      	ldrb	r2, [r7, #11]
 8000582:	4001      	ands	r1, r0
 8000584:	3208      	adds	r2, #8
 8000586:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandler->pGPIO->AFR[reg_selection] |= temp;
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	7afa      	ldrb	r2, [r7, #11]
 8000590:	3208      	adds	r2, #8
 8000592:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	681b      	ldr	r3, [r3, #0]
 800059a:	7afa      	ldrb	r2, [r7, #11]
 800059c:	68f9      	ldr	r1, [r7, #12]
 800059e:	4301      	orrs	r1, r0
 80005a0:	3208      	adds	r2, #8
 80005a2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
	temp = 0;
 80005a6:	2300      	movs	r3, #0
 80005a8:	60fb      	str	r3, [r7, #12]

}
 80005aa:	bf00      	nop
 80005ac:	3714      	adds	r7, #20
 80005ae:	46bd      	mov	sp, r7
 80005b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b4:	4770      	bx	lr
 80005b6:	bf00      	nop
 80005b8:	40013800 	.word	0x40013800
 80005bc:	40013c00 	.word	0x40013c00

080005c0 <GPIO_WriteOutputPin>:
	uint16_t value=0;
	value = (uint16_t) (pGPIOx->IDR);
	return value;
}

void GPIO_WriteOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t value) {
 80005c0:	b480      	push	{r7}
 80005c2:	b083      	sub	sp, #12
 80005c4:	af00      	add	r7, sp, #0
 80005c6:	6078      	str	r0, [r7, #4]
 80005c8:	460b      	mov	r3, r1
 80005ca:	70fb      	strb	r3, [r7, #3]
 80005cc:	4613      	mov	r3, r2
 80005ce:	70bb      	strb	r3, [r7, #2]
	if (value == GPIO_PIN_SET) {
 80005d0:	78bb      	ldrb	r3, [r7, #2]
 80005d2:	2b01      	cmp	r3, #1
 80005d4:	d109      	bne.n	80005ea <GPIO_WriteOutputPin+0x2a>
		/*set pin*/
		pGPIOx->ODR |= (1 << PinNumber);
 80005d6:	687b      	ldr	r3, [r7, #4]
 80005d8:	695b      	ldr	r3, [r3, #20]
 80005da:	78fa      	ldrb	r2, [r7, #3]
 80005dc:	2101      	movs	r1, #1
 80005de:	fa01 f202 	lsl.w	r2, r1, r2
 80005e2:	431a      	orrs	r2, r3
 80005e4:	687b      	ldr	r3, [r7, #4]
 80005e6:	615a      	str	r2, [r3, #20]
	} else {
		/*reset pin*/
		pGPIOx->ODR &= ~(1 << PinNumber);
	}
}
 80005e8:	e009      	b.n	80005fe <GPIO_WriteOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	695b      	ldr	r3, [r3, #20]
 80005ee:	78fa      	ldrb	r2, [r7, #3]
 80005f0:	2101      	movs	r1, #1
 80005f2:	fa01 f202 	lsl.w	r2, r1, r2
 80005f6:	43d2      	mvns	r2, r2
 80005f8:	401a      	ands	r2, r3
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	615a      	str	r2, [r3, #20]
}
 80005fe:	bf00      	nop
 8000600:	370c      	adds	r7, #12
 8000602:	46bd      	mov	sp, r7
 8000604:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000608:	4770      	bx	lr
	...

0800060c <GPIO_IRQ_ISR_Config>:
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
	pGPIOx->ODR ^= ( 1 << PinNumber);
}


void GPIO_IRQ_ISR_Config(uint8_t IRQNumber, uint8_t state) {
 800060c:	b480      	push	{r7}
 800060e:	b083      	sub	sp, #12
 8000610:	af00      	add	r7, sp, #0
 8000612:	4603      	mov	r3, r0
 8000614:	460a      	mov	r2, r1
 8000616:	71fb      	strb	r3, [r7, #7]
 8000618:	4613      	mov	r3, r2
 800061a:	71bb      	strb	r3, [r7, #6]
	if ( state == ENABLE) {
 800061c:	79bb      	ldrb	r3, [r7, #6]
 800061e:	2b01      	cmp	r3, #1
 8000620:	d133      	bne.n	800068a <GPIO_IRQ_ISR_Config+0x7e>
		/* Enable interrupt */
		if ( IRQNumber <= 31 ) {
 8000622:	79fb      	ldrb	r3, [r7, #7]
 8000624:	2b1f      	cmp	r3, #31
 8000626:	d80a      	bhi.n	800063e <GPIO_IRQ_ISR_Config+0x32>
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 8000628:	4b35      	ldr	r3, [pc, #212]	; (8000700 <GPIO_IRQ_ISR_Config+0xf4>)
 800062a:	681b      	ldr	r3, [r3, #0]
 800062c:	79fa      	ldrb	r2, [r7, #7]
 800062e:	2101      	movs	r1, #1
 8000630:	fa01 f202 	lsl.w	r2, r1, r2
 8000634:	4611      	mov	r1, r2
 8000636:	4a32      	ldr	r2, [pc, #200]	; (8000700 <GPIO_IRQ_ISR_Config+0xf4>)
 8000638:	430b      	orrs	r3, r1
 800063a:	6013      	str	r3, [r2, #0]
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
		} else if ( IRQNumber >= 64 && IRQNumber < 96) {
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}
}
 800063c:	e059      	b.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
		} else if ( IRQNumber > 31 && IRQNumber < 64) {
 800063e:	79fb      	ldrb	r3, [r7, #7]
 8000640:	2b1f      	cmp	r3, #31
 8000642:	d90f      	bls.n	8000664 <GPIO_IRQ_ISR_Config+0x58>
 8000644:	79fb      	ldrb	r3, [r7, #7]
 8000646:	2b3f      	cmp	r3, #63	; 0x3f
 8000648:	d80c      	bhi.n	8000664 <GPIO_IRQ_ISR_Config+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 800064a:	4b2e      	ldr	r3, [pc, #184]	; (8000704 <GPIO_IRQ_ISR_Config+0xf8>)
 800064c:	681b      	ldr	r3, [r3, #0]
 800064e:	79fa      	ldrb	r2, [r7, #7]
 8000650:	f002 021f 	and.w	r2, r2, #31
 8000654:	2101      	movs	r1, #1
 8000656:	fa01 f202 	lsl.w	r2, r1, r2
 800065a:	4611      	mov	r1, r2
 800065c:	4a29      	ldr	r2, [pc, #164]	; (8000704 <GPIO_IRQ_ISR_Config+0xf8>)
 800065e:	430b      	orrs	r3, r1
 8000660:	6013      	str	r3, [r2, #0]
 8000662:	e046      	b.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
		} else if ( IRQNumber >= 64 && IRQNumber < 96) {
 8000664:	79fb      	ldrb	r3, [r7, #7]
 8000666:	2b3f      	cmp	r3, #63	; 0x3f
 8000668:	d943      	bls.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
 800066a:	79fb      	ldrb	r3, [r7, #7]
 800066c:	2b5f      	cmp	r3, #95	; 0x5f
 800066e:	d840      	bhi.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
			*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 8000670:	4b25      	ldr	r3, [pc, #148]	; (8000708 <GPIO_IRQ_ISR_Config+0xfc>)
 8000672:	681b      	ldr	r3, [r3, #0]
 8000674:	79fa      	ldrb	r2, [r7, #7]
 8000676:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800067a:	2101      	movs	r1, #1
 800067c:	fa01 f202 	lsl.w	r2, r1, r2
 8000680:	4611      	mov	r1, r2
 8000682:	4a21      	ldr	r2, [pc, #132]	; (8000708 <GPIO_IRQ_ISR_Config+0xfc>)
 8000684:	430b      	orrs	r3, r1
 8000686:	6013      	str	r3, [r2, #0]
}
 8000688:	e033      	b.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
		if ( IRQNumber <= 31 ) {
 800068a:	79fb      	ldrb	r3, [r7, #7]
 800068c:	2b1f      	cmp	r3, #31
 800068e:	d80a      	bhi.n	80006a6 <GPIO_IRQ_ISR_Config+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 8000690:	4b1e      	ldr	r3, [pc, #120]	; (800070c <GPIO_IRQ_ISR_Config+0x100>)
 8000692:	681b      	ldr	r3, [r3, #0]
 8000694:	79fa      	ldrb	r2, [r7, #7]
 8000696:	2101      	movs	r1, #1
 8000698:	fa01 f202 	lsl.w	r2, r1, r2
 800069c:	4611      	mov	r1, r2
 800069e:	4a1b      	ldr	r2, [pc, #108]	; (800070c <GPIO_IRQ_ISR_Config+0x100>)
 80006a0:	430b      	orrs	r3, r1
 80006a2:	6013      	str	r3, [r2, #0]
}
 80006a4:	e025      	b.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
		} else if ( IRQNumber > 31 && IRQNumber < 64) {
 80006a6:	79fb      	ldrb	r3, [r7, #7]
 80006a8:	2b1f      	cmp	r3, #31
 80006aa:	d90f      	bls.n	80006cc <GPIO_IRQ_ISR_Config+0xc0>
 80006ac:	79fb      	ldrb	r3, [r7, #7]
 80006ae:	2b3f      	cmp	r3, #63	; 0x3f
 80006b0:	d80c      	bhi.n	80006cc <GPIO_IRQ_ISR_Config+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 80006b2:	4b17      	ldr	r3, [pc, #92]	; (8000710 <GPIO_IRQ_ISR_Config+0x104>)
 80006b4:	681b      	ldr	r3, [r3, #0]
 80006b6:	79fa      	ldrb	r2, [r7, #7]
 80006b8:	f002 021f 	and.w	r2, r2, #31
 80006bc:	2101      	movs	r1, #1
 80006be:	fa01 f202 	lsl.w	r2, r1, r2
 80006c2:	4611      	mov	r1, r2
 80006c4:	4a12      	ldr	r2, [pc, #72]	; (8000710 <GPIO_IRQ_ISR_Config+0x104>)
 80006c6:	430b      	orrs	r3, r1
 80006c8:	6013      	str	r3, [r2, #0]
 80006ca:	e012      	b.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
		} else if ( IRQNumber >= 64 && IRQNumber < 96) {
 80006cc:	79fb      	ldrb	r3, [r7, #7]
 80006ce:	2b3f      	cmp	r3, #63	; 0x3f
 80006d0:	d90f      	bls.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
 80006d2:	79fb      	ldrb	r3, [r7, #7]
 80006d4:	2b5f      	cmp	r3, #95	; 0x5f
 80006d6:	d80c      	bhi.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 80006d8:	4b0e      	ldr	r3, [pc, #56]	; (8000714 <GPIO_IRQ_ISR_Config+0x108>)
 80006da:	681b      	ldr	r3, [r3, #0]
 80006dc:	79fa      	ldrb	r2, [r7, #7]
 80006de:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80006e2:	2101      	movs	r1, #1
 80006e4:	fa01 f202 	lsl.w	r2, r1, r2
 80006e8:	4611      	mov	r1, r2
 80006ea:	4a0a      	ldr	r2, [pc, #40]	; (8000714 <GPIO_IRQ_ISR_Config+0x108>)
 80006ec:	430b      	orrs	r3, r1
 80006ee:	6013      	str	r3, [r2, #0]
}
 80006f0:	e7ff      	b.n	80006f2 <GPIO_IRQ_ISR_Config+0xe6>
 80006f2:	bf00      	nop
 80006f4:	370c      	adds	r7, #12
 80006f6:	46bd      	mov	sp, r7
 80006f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006fc:	4770      	bx	lr
 80006fe:	bf00      	nop
 8000700:	e000e100 	.word	0xe000e100
 8000704:	e000e104 	.word	0xe000e104
 8000708:	e000e108 	.word	0xe000e108
 800070c:	e000e180 	.word	0xe000e180
 8000710:	e000e184 	.word	0xe000e184
 8000714:	e000e188 	.word	0xe000e188

08000718 <GPIO_IRQ_PRIO_Config>:

void GPIO_IRQ_PRIO_Config(uint8_t IRQNumber, uint8_t IRQPriority) {
 8000718:	b480      	push	{r7}
 800071a:	b085      	sub	sp, #20
 800071c:	af00      	add	r7, sp, #0
 800071e:	4603      	mov	r3, r0
 8000720:	460a      	mov	r2, r1
 8000722:	71fb      	strb	r3, [r7, #7]
 8000724:	4613      	mov	r3, r2
 8000726:	71bb      	strb	r3, [r7, #6]
	uint8_t reg_index = 0; /* 0 - 59 */
 8000728:	2300      	movs	r3, #0
 800072a:	73fb      	strb	r3, [r7, #15]
	uint8_t reg_order = 0; /* 0 - 3 */
 800072c:	2300      	movs	r3, #0
 800072e:	73bb      	strb	r3, [r7, #14]

	reg_index = IRQNumber / 4;
 8000730:	79fb      	ldrb	r3, [r7, #7]
 8000732:	089b      	lsrs	r3, r3, #2
 8000734:	73fb      	strb	r3, [r7, #15]
	reg_order = IRQNumber % 4;
 8000736:	79fb      	ldrb	r3, [r7, #7]
 8000738:	f003 0303 	and.w	r3, r3, #3
 800073c:	73bb      	strb	r3, [r7, #14]
	*( NVIC_IPR_BASEADDR + reg_index ) &= ~( 0xF << (reg_order*8 + 4) );
 800073e:	7bfb      	ldrb	r3, [r7, #15]
 8000740:	009b      	lsls	r3, r3, #2
 8000742:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000746:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 800074a:	681a      	ldr	r2, [r3, #0]
 800074c:	7bbb      	ldrb	r3, [r7, #14]
 800074e:	00db      	lsls	r3, r3, #3
 8000750:	3304      	adds	r3, #4
 8000752:	210f      	movs	r1, #15
 8000754:	fa01 f303 	lsl.w	r3, r1, r3
 8000758:	43db      	mvns	r3, r3
 800075a:	4619      	mov	r1, r3
 800075c:	7bfb      	ldrb	r3, [r7, #15]
 800075e:	009b      	lsls	r3, r3, #2
 8000760:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000764:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000768:	400a      	ands	r2, r1
 800076a:	601a      	str	r2, [r3, #0]
	*( NVIC_IPR_BASEADDR + reg_index ) |= ( IRQPriority << (reg_order*8 + 4) );
 800076c:	7bfb      	ldrb	r3, [r7, #15]
 800076e:	009b      	lsls	r3, r3, #2
 8000770:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000774:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000778:	681a      	ldr	r2, [r3, #0]
 800077a:	79b9      	ldrb	r1, [r7, #6]
 800077c:	7bbb      	ldrb	r3, [r7, #14]
 800077e:	00db      	lsls	r3, r3, #3
 8000780:	3304      	adds	r3, #4
 8000782:	fa01 f303 	lsl.w	r3, r1, r3
 8000786:	4619      	mov	r1, r3
 8000788:	7bfb      	ldrb	r3, [r7, #15]
 800078a:	009b      	lsls	r3, r3, #2
 800078c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000790:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000794:	430a      	orrs	r2, r1
 8000796:	601a      	str	r2, [r3, #0]
}
 8000798:	bf00      	nop
 800079a:	3714      	adds	r7, #20
 800079c:	46bd      	mov	sp, r7
 800079e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007a2:	4770      	bx	lr

080007a4 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber) {
 80007a4:	b480      	push	{r7}
 80007a6:	b083      	sub	sp, #12
 80007a8:	af00      	add	r7, sp, #0
 80007aa:	4603      	mov	r3, r0
 80007ac:	71fb      	strb	r3, [r7, #7]
	/* Check and clear the EXTI_PR (Pending Register) */
	if (EXTI->PR & (1 << PinNumber)) {
 80007ae:	4b0c      	ldr	r3, [pc, #48]	; (80007e0 <GPIO_IRQHandling+0x3c>)
 80007b0:	695b      	ldr	r3, [r3, #20]
 80007b2:	79fa      	ldrb	r2, [r7, #7]
 80007b4:	2101      	movs	r1, #1
 80007b6:	fa01 f202 	lsl.w	r2, r1, r2
 80007ba:	4013      	ands	r3, r2
 80007bc:	2b00      	cmp	r3, #0
 80007be:	d009      	beq.n	80007d4 <GPIO_IRQHandling+0x30>
		/* Clear by program to 1 */
		EXTI->PR |= (1 << PinNumber);
 80007c0:	4b07      	ldr	r3, [pc, #28]	; (80007e0 <GPIO_IRQHandling+0x3c>)
 80007c2:	695b      	ldr	r3, [r3, #20]
 80007c4:	79fa      	ldrb	r2, [r7, #7]
 80007c6:	2101      	movs	r1, #1
 80007c8:	fa01 f202 	lsl.w	r2, r1, r2
 80007cc:	4611      	mov	r1, r2
 80007ce:	4a04      	ldr	r2, [pc, #16]	; (80007e0 <GPIO_IRQHandling+0x3c>)
 80007d0:	430b      	orrs	r3, r1
 80007d2:	6153      	str	r3, [r2, #20]
	}
}
 80007d4:	bf00      	nop
 80007d6:	370c      	adds	r7, #12
 80007d8:	46bd      	mov	sp, r7
 80007da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007de:	4770      	bx	lr
 80007e0:	40013c00 	.word	0x40013c00

080007e4 <main>:

	}
}

int main(void)
{
 80007e4:	b580      	push	{r7, lr}
 80007e6:	b086      	sub	sp, #24
 80007e8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIO_LED, GPIO_BTN;
	memset(&GPIO_LED, 0, sizeof(GPIO_LED));
 80007ea:	f107 030c 	add.w	r3, r7, #12
 80007ee:	220c      	movs	r2, #12
 80007f0:	2100      	movs	r1, #0
 80007f2:	4618      	mov	r0, r3
 80007f4:	f000 f88b 	bl	800090e <memset>
	memset(&GPIO_BTN, 0, sizeof(GPIO_BTN));
 80007f8:	463b      	mov	r3, r7
 80007fa:	220c      	movs	r2, #12
 80007fc:	2100      	movs	r1, #0
 80007fe:	4618      	mov	r0, r3
 8000800:	f000 f885 	bl	800090e <memset>

	GPIO_LED.pGPIO = GPIOC;
 8000804:	4b21      	ldr	r3, [pc, #132]	; (800088c <main+0xa8>)
 8000806:	60fb      	str	r3, [r7, #12]
	GPIO_LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000808:	230d      	movs	r3, #13
 800080a:	743b      	strb	r3, [r7, #16]
	GPIO_LED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800080c:	2301      	movs	r3, #1
 800080e:	747b      	strb	r3, [r7, #17]
	GPIO_LED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000810:	2302      	movs	r3, #2
 8000812:	74bb      	strb	r3, [r7, #18]
	GPIO_LED.GPIO_PinConfig.GPIO_PinPuPdCtrl = GPIO_PIN_PU;		/* pull-up*/
 8000814:	2301      	movs	r3, #1
 8000816:	74fb      	strb	r3, [r7, #19]
	GPIO_LED.GPIO_PinConfig.GPIO_PinOutputType = GPIO_OUT_PUSHPULL;
 8000818:	2300      	movs	r3, #0
 800081a:	753b      	strb	r3, [r7, #20]
//	GPIO_LED.GPIO_PinConfig.GPIO_PinAltFuncMode = GPIO_SPEED_FAST;
	GPIO_PeriClockCtrl(GPIO_LED.pGPIO, ENABLE);
 800081c:	68fb      	ldr	r3, [r7, #12]
 800081e:	2101      	movs	r1, #1
 8000820:	4618      	mov	r0, r3
 8000822:	f7ff fcd9 	bl	80001d8 <GPIO_PeriClockCtrl>
	GPIO_Init(&GPIO_LED);
 8000826:	f107 030c 	add.w	r3, r7, #12
 800082a:	4618      	mov	r0, r3
 800082c:	f7ff fd26 	bl	800027c <GPIO_Init>

	GPIO_BTN.pGPIO = GPIOA;
 8000830:	4b17      	ldr	r3, [pc, #92]	; (8000890 <main+0xac>)
 8000832:	603b      	str	r3, [r7, #0]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 8000834:	2300      	movs	r3, #0
 8000836:	713b      	strb	r3, [r7, #4]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000838:	2305      	movs	r3, #5
 800083a:	717b      	strb	r3, [r7, #5]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800083c:	2302      	movs	r3, #2
 800083e:	71bb      	strb	r3, [r7, #6]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinPuPdCtrl = GPIO_PIN_PU;		/* pull-up*/
 8000840:	2301      	movs	r3, #1
 8000842:	71fb      	strb	r3, [r7, #7]
//	GPIO_BTN.GPIO_PinConfig.GPIO_PinOutputType = GPIO_OUT_PUSHPULL;

	GPIO_PeriClockCtrl(GPIO_BTN.pGPIO, ENABLE);
 8000844:	683b      	ldr	r3, [r7, #0]
 8000846:	2101      	movs	r1, #1
 8000848:	4618      	mov	r0, r3
 800084a:	f7ff fcc5 	bl	80001d8 <GPIO_PeriClockCtrl>
	GPIO_Init(&GPIO_BTN);
 800084e:	463b      	mov	r3, r7
 8000850:	4618      	mov	r0, r3
 8000852:	f7ff fd13 	bl	800027c <GPIO_Init>
	/*interrupt configure*/
	GPIO_IRQ_PRIO_Config(IRQ_NO_EXTI0, IRQ_PRIO_3);
 8000856:	2103      	movs	r1, #3
 8000858:	2006      	movs	r0, #6
 800085a:	f7ff ff5d 	bl	8000718 <GPIO_IRQ_PRIO_Config>
	GPIO_IRQ_ISR_Config(IRQ_NO_EXTI0, ENABLE);
 800085e:	2101      	movs	r1, #1
 8000860:	2006      	movs	r0, #6
 8000862:	f7ff fed3 	bl	800060c <GPIO_IRQ_ISR_Config>
//			delay();
//			btn_status = -btn_status;
//
//		}

		if ( btn_status == 1 ) {
 8000866:	4b0b      	ldr	r3, [pc, #44]	; (8000894 <main+0xb0>)
 8000868:	f993 3000 	ldrsb.w	r3, [r3]
 800086c:	2b01      	cmp	r3, #1
 800086e:	d106      	bne.n	800087e <main+0x9a>
			GPIO_WriteOutputPin(GPIO_LED.pGPIO, GPIO_PIN_NO_13, GPIO_PIN_SET);
 8000870:	68fb      	ldr	r3, [r7, #12]
 8000872:	2201      	movs	r2, #1
 8000874:	210d      	movs	r1, #13
 8000876:	4618      	mov	r0, r3
 8000878:	f7ff fea2 	bl	80005c0 <GPIO_WriteOutputPin>
 800087c:	e7f3      	b.n	8000866 <main+0x82>
		} else {
			GPIO_WriteOutputPin(GPIO_LED.pGPIO, GPIO_PIN_NO_13, GPIO_PIN_RESET);
 800087e:	68fb      	ldr	r3, [r7, #12]
 8000880:	2200      	movs	r2, #0
 8000882:	210d      	movs	r1, #13
 8000884:	4618      	mov	r0, r3
 8000886:	f7ff fe9b 	bl	80005c0 <GPIO_WriteOutputPin>
		if ( btn_status == 1 ) {
 800088a:	e7ec      	b.n	8000866 <main+0x82>
 800088c:	40020800 	.word	0x40020800
 8000890:	40020000 	.word	0x40020000
 8000894:	20000000 	.word	0x20000000

08000898 <EXTI0_IRQHandler>:
		}
//		delay();
	}
}

void EXTI0_IRQHandler(void) {
 8000898:	b580      	push	{r7, lr}
 800089a:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_0);
 800089c:	2000      	movs	r0, #0
 800089e:	f7ff ff81 	bl	80007a4 <GPIO_IRQHandling>
	btn_status = -btn_status;
 80008a2:	4b05      	ldr	r3, [pc, #20]	; (80008b8 <EXTI0_IRQHandler+0x20>)
 80008a4:	f993 3000 	ldrsb.w	r3, [r3]
 80008a8:	b2db      	uxtb	r3, r3
 80008aa:	425b      	negs	r3, r3
 80008ac:	b2db      	uxtb	r3, r3
 80008ae:	b25a      	sxtb	r2, r3
 80008b0:	4b01      	ldr	r3, [pc, #4]	; (80008b8 <EXTI0_IRQHandler+0x20>)
 80008b2:	701a      	strb	r2, [r3, #0]
}
 80008b4:	bf00      	nop
 80008b6:	bd80      	pop	{r7, pc}
 80008b8:	20000000 	.word	0x20000000

080008bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008bc:	480d      	ldr	r0, [pc, #52]	; (80008f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008be:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80008c0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008c4:	480c      	ldr	r0, [pc, #48]	; (80008f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80008c6:	490d      	ldr	r1, [pc, #52]	; (80008fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80008c8:	4a0d      	ldr	r2, [pc, #52]	; (8000900 <LoopForever+0xe>)
  movs r3, #0
 80008ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80008cc:	e002      	b.n	80008d4 <LoopCopyDataInit>

080008ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80008ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80008d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80008d2:	3304      	adds	r3, #4

080008d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008d8:	d3f9      	bcc.n	80008ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008da:	4a0a      	ldr	r2, [pc, #40]	; (8000904 <LoopForever+0x12>)
  ldr r4, =_ebss
 80008dc:	4c0a      	ldr	r4, [pc, #40]	; (8000908 <LoopForever+0x16>)
  movs r3, #0
 80008de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008e0:	e001      	b.n	80008e6 <LoopFillZerobss>

080008e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008e4:	3204      	adds	r2, #4

080008e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008e8:	d3fb      	bcc.n	80008e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80008ea:	f000 f819 	bl	8000920 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008ee:	f7ff ff79 	bl	80007e4 <main>

080008f2 <LoopForever>:

LoopForever:
  b LoopForever
 80008f2:	e7fe      	b.n	80008f2 <LoopForever>
  ldr   r0, =_estack
 80008f4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80008f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008fc:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000900:	08000988 	.word	0x08000988
  ldr r2, =_sbss
 8000904:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000908:	20000020 	.word	0x20000020

0800090c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800090c:	e7fe      	b.n	800090c <ADC_IRQHandler>

0800090e <memset>:
 800090e:	4402      	add	r2, r0
 8000910:	4603      	mov	r3, r0
 8000912:	4293      	cmp	r3, r2
 8000914:	d100      	bne.n	8000918 <memset+0xa>
 8000916:	4770      	bx	lr
 8000918:	f803 1b01 	strb.w	r1, [r3], #1
 800091c:	e7f9      	b.n	8000912 <memset+0x4>
	...

08000920 <__libc_init_array>:
 8000920:	b570      	push	{r4, r5, r6, lr}
 8000922:	4d0d      	ldr	r5, [pc, #52]	; (8000958 <__libc_init_array+0x38>)
 8000924:	4c0d      	ldr	r4, [pc, #52]	; (800095c <__libc_init_array+0x3c>)
 8000926:	1b64      	subs	r4, r4, r5
 8000928:	10a4      	asrs	r4, r4, #2
 800092a:	2600      	movs	r6, #0
 800092c:	42a6      	cmp	r6, r4
 800092e:	d109      	bne.n	8000944 <__libc_init_array+0x24>
 8000930:	4d0b      	ldr	r5, [pc, #44]	; (8000960 <__libc_init_array+0x40>)
 8000932:	4c0c      	ldr	r4, [pc, #48]	; (8000964 <__libc_init_array+0x44>)
 8000934:	f000 f818 	bl	8000968 <_init>
 8000938:	1b64      	subs	r4, r4, r5
 800093a:	10a4      	asrs	r4, r4, #2
 800093c:	2600      	movs	r6, #0
 800093e:	42a6      	cmp	r6, r4
 8000940:	d105      	bne.n	800094e <__libc_init_array+0x2e>
 8000942:	bd70      	pop	{r4, r5, r6, pc}
 8000944:	f855 3b04 	ldr.w	r3, [r5], #4
 8000948:	4798      	blx	r3
 800094a:	3601      	adds	r6, #1
 800094c:	e7ee      	b.n	800092c <__libc_init_array+0xc>
 800094e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000952:	4798      	blx	r3
 8000954:	3601      	adds	r6, #1
 8000956:	e7f2      	b.n	800093e <__libc_init_array+0x1e>
 8000958:	08000980 	.word	0x08000980
 800095c:	08000980 	.word	0x08000980
 8000960:	08000980 	.word	0x08000980
 8000964:	08000984 	.word	0x08000984

08000968 <_init>:
 8000968:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800096a:	bf00      	nop
 800096c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800096e:	bc08      	pop	{r3}
 8000970:	469e      	mov	lr, r3
 8000972:	4770      	bx	lr

08000974 <_fini>:
 8000974:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000976:	bf00      	nop
 8000978:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800097a:	bc08      	pop	{r3}
 800097c:	469e      	mov	lr, r3
 800097e:	4770      	bx	lr
