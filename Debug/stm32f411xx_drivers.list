
stm32f411xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000878  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000a10  08000a10  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000a10  08000a10  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08000a10  08000a10  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000a10  08000a10  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000a10  08000a10  00010a10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000a14  08000a14  00010a14  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000a18  00020000  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  08000a1c  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000a1c  00020020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a48  00000000  00000000  00020077  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002bb  00000000  00000000  00020abf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00020d80  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008d  00000000  00000000  00020e48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002213  00000000  00000000  00020ed5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001162  00000000  00000000  000230e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008bc9  00000000  00000000  0002424a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000288  00000000  00000000  0002ce14  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000006b  00000000  00000000  0002d09c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000004 	.word	0x20000004
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080009f8 	.word	0x080009f8

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000008 	.word	0x20000008
 80001d4:	080009f8 	.word	0x080009f8

080001d8 <GPIO_PeriClockCtrl>:

/*
 * APIs supported by this driver
 */

void GPIO_PeriClockCtrl(GPIO_RegDef_t *pGPIOx, uint8_t state){
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
 80001de:	6078      	str	r0, [r7, #4]
 80001e0:	460b      	mov	r3, r1
 80001e2:	70fb      	strb	r3, [r7, #3]
	if (state == ENABLE) {
 80001e4:	78fb      	ldrb	r3, [r7, #3]
 80001e6:	2b01      	cmp	r3, #1
 80001e8:	d135      	bne.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		if (pGPIOx == GPIOA) {
 80001ea:	687b      	ldr	r3, [r7, #4]
 80001ec:	4a1d      	ldr	r2, [pc, #116]	; (8000264 <GPIO_PeriClockCtrl+0x8c>)
 80001ee:	4293      	cmp	r3, r2
 80001f0:	d106      	bne.n	8000200 <GPIO_PeriClockCtrl+0x28>
			GPIOA_PCLK_EN();
 80001f2:	4b1d      	ldr	r3, [pc, #116]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 80001f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001f6:	4a1c      	ldr	r2, [pc, #112]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 80001f8:	f043 0301 	orr.w	r3, r3, #1
 80001fc:	6313      	str	r3, [r2, #48]	; 0x30
			GPIOE_PCLK_EN();
		}else {
			/*do nothing*/
		}
	}
}
 80001fe:	e02a      	b.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		} else if (pGPIOx == GPIOB) {
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	4a1a      	ldr	r2, [pc, #104]	; (800026c <GPIO_PeriClockCtrl+0x94>)
 8000204:	4293      	cmp	r3, r2
 8000206:	d106      	bne.n	8000216 <GPIO_PeriClockCtrl+0x3e>
			GPIOB_PCLK_EN();
 8000208:	4b17      	ldr	r3, [pc, #92]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 800020a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800020c:	4a16      	ldr	r2, [pc, #88]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 800020e:	f043 0302 	orr.w	r3, r3, #2
 8000212:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000214:	e01f      	b.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		} else if (pGPIOx == GPIOC) {
 8000216:	687b      	ldr	r3, [r7, #4]
 8000218:	4a15      	ldr	r2, [pc, #84]	; (8000270 <GPIO_PeriClockCtrl+0x98>)
 800021a:	4293      	cmp	r3, r2
 800021c:	d106      	bne.n	800022c <GPIO_PeriClockCtrl+0x54>
			GPIOC_PCLK_EN();
 800021e:	4b12      	ldr	r3, [pc, #72]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 8000220:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000222:	4a11      	ldr	r2, [pc, #68]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 8000224:	f043 0304 	orr.w	r3, r3, #4
 8000228:	6313      	str	r3, [r2, #48]	; 0x30
}
 800022a:	e014      	b.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		} else if (pGPIOx == GPIOD) {
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	4a11      	ldr	r2, [pc, #68]	; (8000274 <GPIO_PeriClockCtrl+0x9c>)
 8000230:	4293      	cmp	r3, r2
 8000232:	d106      	bne.n	8000242 <GPIO_PeriClockCtrl+0x6a>
			GPIOD_PCLK_EN();
 8000234:	4b0c      	ldr	r3, [pc, #48]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 8000236:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000238:	4a0b      	ldr	r2, [pc, #44]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 800023a:	f043 0308 	orr.w	r3, r3, #8
 800023e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000240:	e009      	b.n	8000256 <GPIO_PeriClockCtrl+0x7e>
		} else if (pGPIOx == GPIOE) {
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	4a0c      	ldr	r2, [pc, #48]	; (8000278 <GPIO_PeriClockCtrl+0xa0>)
 8000246:	4293      	cmp	r3, r2
 8000248:	d105      	bne.n	8000256 <GPIO_PeriClockCtrl+0x7e>
			GPIOE_PCLK_EN();
 800024a:	4b07      	ldr	r3, [pc, #28]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 800024c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024e:	4a06      	ldr	r2, [pc, #24]	; (8000268 <GPIO_PeriClockCtrl+0x90>)
 8000250:	f043 0310 	orr.w	r3, r3, #16
 8000254:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000256:	bf00      	nop
 8000258:	370c      	adds	r7, #12
 800025a:	46bd      	mov	sp, r7
 800025c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000260:	4770      	bx	lr
 8000262:	bf00      	nop
 8000264:	40020000 	.word	0x40020000
 8000268:	40023800 	.word	0x40023800
 800026c:	40020400 	.word	0x40020400
 8000270:	40020800 	.word	0x40020800
 8000274:	40020c00 	.word	0x40020c00
 8000278:	40021000 	.word	0x40021000

0800027c <GPIO_Init>:

void GPIO_Init(GPIO_Handle_t *pGPIOHandler) {
 800027c:	b480      	push	{r7}
 800027e:	b085      	sub	sp, #20
 8000280:	af00      	add	r7, sp, #0
 8000282:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0; /*temporary register*/
 8000284:	2300      	movs	r3, #0
 8000286:	60fb      	str	r3, [r7, #12]
	uint8_t reg_selection = 0;
 8000288:	2300      	movs	r3, #0
 800028a:	72fb      	strb	r3, [r7, #11]
	uint8_t pin_selection = 0;
 800028c:	2300      	movs	r3, #0
 800028e:	72bb      	strb	r3, [r7, #10]
	uint8_t port_order = 0;
 8000290:	2300      	movs	r3, #0
 8000292:	727b      	strb	r3, [r7, #9]

	/* 1. configuration gpio pin mode */
	if (pGPIOHandler->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG) {
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	795b      	ldrb	r3, [r3, #5]
 8000298:	2b03      	cmp	r3, #3
 800029a:	d81f      	bhi.n	80002dc <GPIO_Init+0x60>
		temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	795b      	ldrb	r3, [r3, #5]
 80002a0:	461a      	mov	r2, r3
 80002a2:	687b      	ldr	r3, [r7, #4]
 80002a4:	791b      	ldrb	r3, [r3, #4]
 80002a6:	005b      	lsls	r3, r3, #1
 80002a8:	fa02 f303 	lsl.w	r3, r2, r3
 80002ac:	60fb      	str	r3, [r7, #12]
		pGPIOHandler->pGPIO->MODER &= ~(0x03 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80002ae:	687b      	ldr	r3, [r7, #4]
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	681a      	ldr	r2, [r3, #0]
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	791b      	ldrb	r3, [r3, #4]
 80002b8:	4619      	mov	r1, r3
 80002ba:	2303      	movs	r3, #3
 80002bc:	408b      	lsls	r3, r1
 80002be:	43db      	mvns	r3, r3
 80002c0:	4619      	mov	r1, r3
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	681b      	ldr	r3, [r3, #0]
 80002c6:	400a      	ands	r2, r1
 80002c8:	601a      	str	r2, [r3, #0]
		pGPIOHandler->pGPIO->MODER |= temp;
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	6819      	ldr	r1, [r3, #0]
 80002d0:	687b      	ldr	r3, [r7, #4]
 80002d2:	681b      	ldr	r3, [r3, #0]
 80002d4:	68fa      	ldr	r2, [r7, #12]
 80002d6:	430a      	orrs	r2, r1
 80002d8:	601a      	str	r2, [r3, #0]
 80002da:	e0b4      	b.n	8000446 <GPIO_Init+0x1ca>

	} else {
		/*interrupt mode*/
		if ( pGPIOHandler->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT) {
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	795b      	ldrb	r3, [r3, #5]
 80002e0:	2b05      	cmp	r3, #5
 80002e2:	d111      	bne.n	8000308 <GPIO_Init+0x8c>
			/* Configuration for Falling Edge IT */
			/* 1. Enable EXTI_FTSR */
			EXTI->FTSR |= (pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80002e4:	4b45      	ldr	r3, [pc, #276]	; (80003fc <GPIO_Init+0x180>)
 80002e6:	68db      	ldr	r3, [r3, #12]
 80002e8:	687a      	ldr	r2, [r7, #4]
 80002ea:	7912      	ldrb	r2, [r2, #4]
 80002ec:	4611      	mov	r1, r2
 80002ee:	4a43      	ldr	r2, [pc, #268]	; (80003fc <GPIO_Init+0x180>)
 80002f0:	430b      	orrs	r3, r1
 80002f2:	60d3      	str	r3, [r2, #12]
			/* 2. Clear the corresponding RTSR */
			EXTI->RTSR &= ~(pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80002f4:	4b41      	ldr	r3, [pc, #260]	; (80003fc <GPIO_Init+0x180>)
 80002f6:	689b      	ldr	r3, [r3, #8]
 80002f8:	687a      	ldr	r2, [r7, #4]
 80002fa:	7912      	ldrb	r2, [r2, #4]
 80002fc:	43d2      	mvns	r2, r2
 80002fe:	4611      	mov	r1, r2
 8000300:	4a3e      	ldr	r2, [pc, #248]	; (80003fc <GPIO_Init+0x180>)
 8000302:	400b      	ands	r3, r1
 8000304:	6093      	str	r3, [r2, #8]
 8000306:	e029      	b.n	800035c <GPIO_Init+0xe0>

		} else if (pGPIOHandler->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT ) {
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	795b      	ldrb	r3, [r3, #5]
 800030c:	2b04      	cmp	r3, #4
 800030e:	d111      	bne.n	8000334 <GPIO_Init+0xb8>
			/* Configuration for Rising Edge IT*/
			/* 1. Enable EXTI_RTSR */
			EXTI->RTSR |= (pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 8000310:	4b3a      	ldr	r3, [pc, #232]	; (80003fc <GPIO_Init+0x180>)
 8000312:	689b      	ldr	r3, [r3, #8]
 8000314:	687a      	ldr	r2, [r7, #4]
 8000316:	7912      	ldrb	r2, [r2, #4]
 8000318:	4611      	mov	r1, r2
 800031a:	4a38      	ldr	r2, [pc, #224]	; (80003fc <GPIO_Init+0x180>)
 800031c:	430b      	orrs	r3, r1
 800031e:	6093      	str	r3, [r2, #8]
			/* 2. Clear the corresponding FTSR */
			EXTI->FTSR &= ~(pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 8000320:	4b36      	ldr	r3, [pc, #216]	; (80003fc <GPIO_Init+0x180>)
 8000322:	68db      	ldr	r3, [r3, #12]
 8000324:	687a      	ldr	r2, [r7, #4]
 8000326:	7912      	ldrb	r2, [r2, #4]
 8000328:	43d2      	mvns	r2, r2
 800032a:	4611      	mov	r1, r2
 800032c:	4a33      	ldr	r2, [pc, #204]	; (80003fc <GPIO_Init+0x180>)
 800032e:	400b      	ands	r3, r1
 8000330:	60d3      	str	r3, [r2, #12]
 8000332:	e013      	b.n	800035c <GPIO_Init+0xe0>

		} else if (pGPIOHandler->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT ) {
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	795b      	ldrb	r3, [r3, #5]
 8000338:	2b06      	cmp	r3, #6
 800033a:	d10f      	bne.n	800035c <GPIO_Init+0xe0>
			/* Configuration for Rising and Falling Edge IT*/
			/* 1. Enable EXTI_RTSR */
			EXTI->RTSR |= (pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800033c:	4b2f      	ldr	r3, [pc, #188]	; (80003fc <GPIO_Init+0x180>)
 800033e:	689b      	ldr	r3, [r3, #8]
 8000340:	687a      	ldr	r2, [r7, #4]
 8000342:	7912      	ldrb	r2, [r2, #4]
 8000344:	4611      	mov	r1, r2
 8000346:	4a2d      	ldr	r2, [pc, #180]	; (80003fc <GPIO_Init+0x180>)
 8000348:	430b      	orrs	r3, r1
 800034a:	6093      	str	r3, [r2, #8]
			/* 2. Enable EXTI_FTSR */
			EXTI->FTSR |= (pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800034c:	4b2b      	ldr	r3, [pc, #172]	; (80003fc <GPIO_Init+0x180>)
 800034e:	68db      	ldr	r3, [r3, #12]
 8000350:	687a      	ldr	r2, [r7, #4]
 8000352:	7912      	ldrb	r2, [r2, #4]
 8000354:	4611      	mov	r1, r2
 8000356:	4a29      	ldr	r2, [pc, #164]	; (80003fc <GPIO_Init+0x180>)
 8000358:	430b      	orrs	r3, r1
 800035a:	60d3      	str	r3, [r2, #12]
		}

		/* 2. Configure the GPIO port Selection in SYSCFG_EXTICR */
		reg_selection = pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber / 4;
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	791b      	ldrb	r3, [r3, #4]
 8000360:	089b      	lsrs	r3, r3, #2
 8000362:	72fb      	strb	r3, [r7, #11]
		port_order = pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000364:	687b      	ldr	r3, [r7, #4]
 8000366:	791b      	ldrb	r3, [r3, #4]
 8000368:	f003 0303 	and.w	r3, r3, #3
 800036c:	727b      	strb	r3, [r7, #9]
		SYSCFG_PCLK_EN();
 800036e:	4b24      	ldr	r3, [pc, #144]	; (8000400 <GPIO_Init+0x184>)
 8000370:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000372:	4a23      	ldr	r2, [pc, #140]	; (8000400 <GPIO_Init+0x184>)
 8000374:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000378:	6453      	str	r3, [r2, #68]	; 0x44
		/* clear bit */
		SYSCFG->EXTICRx[reg_selection] &= ~( 0xF << (port_order*4) );
 800037a:	4a22      	ldr	r2, [pc, #136]	; (8000404 <GPIO_Init+0x188>)
 800037c:	7afb      	ldrb	r3, [r7, #11]
 800037e:	3302      	adds	r3, #2
 8000380:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000384:	7a7b      	ldrb	r3, [r7, #9]
 8000386:	009b      	lsls	r3, r3, #2
 8000388:	210f      	movs	r1, #15
 800038a:	fa01 f303 	lsl.w	r3, r1, r3
 800038e:	43db      	mvns	r3, r3
 8000390:	4618      	mov	r0, r3
 8000392:	491c      	ldr	r1, [pc, #112]	; (8000404 <GPIO_Init+0x188>)
 8000394:	7afb      	ldrb	r3, [r7, #11]
 8000396:	4002      	ands	r2, r0
 8000398:	3302      	adds	r3, #2
 800039a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
		/* set bit */
		SYSCFG->EXTICRx[reg_selection] |= ( (GPIO_BASEADDR_2_CODE(pGPIOHandler->pGPIO)) << (port_order*4) );
 800039e:	4a19      	ldr	r2, [pc, #100]	; (8000404 <GPIO_Init+0x188>)
 80003a0:	7afb      	ldrb	r3, [r7, #11]
 80003a2:	3302      	adds	r3, #2
 80003a4:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	681b      	ldr	r3, [r3, #0]
 80003ac:	4916      	ldr	r1, [pc, #88]	; (8000408 <GPIO_Init+0x18c>)
 80003ae:	428b      	cmp	r3, r1
 80003b0:	d036      	beq.n	8000420 <GPIO_Init+0x1a4>
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	681b      	ldr	r3, [r3, #0]
 80003b6:	4915      	ldr	r1, [pc, #84]	; (800040c <GPIO_Init+0x190>)
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d01d      	beq.n	80003f8 <GPIO_Init+0x17c>
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	681b      	ldr	r3, [r3, #0]
 80003c0:	4913      	ldr	r1, [pc, #76]	; (8000410 <GPIO_Init+0x194>)
 80003c2:	428b      	cmp	r3, r1
 80003c4:	d016      	beq.n	80003f4 <GPIO_Init+0x178>
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	4912      	ldr	r1, [pc, #72]	; (8000414 <GPIO_Init+0x198>)
 80003cc:	428b      	cmp	r3, r1
 80003ce:	d00f      	beq.n	80003f0 <GPIO_Init+0x174>
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	681b      	ldr	r3, [r3, #0]
 80003d4:	4910      	ldr	r1, [pc, #64]	; (8000418 <GPIO_Init+0x19c>)
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d008      	beq.n	80003ec <GPIO_Init+0x170>
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	490f      	ldr	r1, [pc, #60]	; (800041c <GPIO_Init+0x1a0>)
 80003e0:	428b      	cmp	r3, r1
 80003e2:	d101      	bne.n	80003e8 <GPIO_Init+0x16c>
 80003e4:	2307      	movs	r3, #7
 80003e6:	e01c      	b.n	8000422 <GPIO_Init+0x1a6>
 80003e8:	2300      	movs	r3, #0
 80003ea:	e01a      	b.n	8000422 <GPIO_Init+0x1a6>
 80003ec:	2304      	movs	r3, #4
 80003ee:	e018      	b.n	8000422 <GPIO_Init+0x1a6>
 80003f0:	2303      	movs	r3, #3
 80003f2:	e016      	b.n	8000422 <GPIO_Init+0x1a6>
 80003f4:	2302      	movs	r3, #2
 80003f6:	e014      	b.n	8000422 <GPIO_Init+0x1a6>
 80003f8:	2301      	movs	r3, #1
 80003fa:	e012      	b.n	8000422 <GPIO_Init+0x1a6>
 80003fc:	40013c00 	.word	0x40013c00
 8000400:	40023800 	.word	0x40023800
 8000404:	40013800 	.word	0x40013800
 8000408:	40020000 	.word	0x40020000
 800040c:	40020400 	.word	0x40020400
 8000410:	40020800 	.word	0x40020800
 8000414:	40020c00 	.word	0x40020c00
 8000418:	40021000 	.word	0x40021000
 800041c:	40021c00 	.word	0x40021c00
 8000420:	2300      	movs	r3, #0
 8000422:	7a79      	ldrb	r1, [r7, #9]
 8000424:	0089      	lsls	r1, r1, #2
 8000426:	408b      	lsls	r3, r1
 8000428:	4618      	mov	r0, r3
 800042a:	4958      	ldr	r1, [pc, #352]	; (800058c <GPIO_Init+0x310>)
 800042c:	7afb      	ldrb	r3, [r7, #11]
 800042e:	4302      	orrs	r2, r0
 8000430:	3302      	adds	r3, #2
 8000432:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

		/* 3. Enable EXTI interrupt delivery using IMR by un-masking bit
		 * *only un-mask the corresponding interrupt line
		 */
		EXTI->IMR |= pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber;
 8000436:	4b56      	ldr	r3, [pc, #344]	; (8000590 <GPIO_Init+0x314>)
 8000438:	681b      	ldr	r3, [r3, #0]
 800043a:	687a      	ldr	r2, [r7, #4]
 800043c:	7912      	ldrb	r2, [r2, #4]
 800043e:	4611      	mov	r1, r2
 8000440:	4a53      	ldr	r2, [pc, #332]	; (8000590 <GPIO_Init+0x314>)
 8000442:	430b      	orrs	r3, r1
 8000444:	6013      	str	r3, [r2, #0]

	}
	temp = 0;
 8000446:	2300      	movs	r3, #0
 8000448:	60fb      	str	r3, [r7, #12]

	/* 2. configuration gpio pin speed */
	temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinSpeed << (2* pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800044a:	687b      	ldr	r3, [r7, #4]
 800044c:	799b      	ldrb	r3, [r3, #6]
 800044e:	461a      	mov	r2, r3
 8000450:	687b      	ldr	r3, [r7, #4]
 8000452:	791b      	ldrb	r3, [r3, #4]
 8000454:	005b      	lsls	r3, r3, #1
 8000456:	fa02 f303 	lsl.w	r3, r2, r3
 800045a:	60fb      	str	r3, [r7, #12]
	pGPIOHandler->pGPIO->OSPEEDR &= ~(0x03 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	681b      	ldr	r3, [r3, #0]
 8000460:	689a      	ldr	r2, [r3, #8]
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	791b      	ldrb	r3, [r3, #4]
 8000466:	4619      	mov	r1, r3
 8000468:	2303      	movs	r3, #3
 800046a:	408b      	lsls	r3, r1
 800046c:	43db      	mvns	r3, r3
 800046e:	4619      	mov	r1, r3
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	681b      	ldr	r3, [r3, #0]
 8000474:	400a      	ands	r2, r1
 8000476:	609a      	str	r2, [r3, #8]
	pGPIOHandler->pGPIO->OSPEEDR |= temp;
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	681b      	ldr	r3, [r3, #0]
 800047c:	6899      	ldr	r1, [r3, #8]
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	68fa      	ldr	r2, [r7, #12]
 8000484:	430a      	orrs	r2, r1
 8000486:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000488:	2300      	movs	r3, #0
 800048a:	60fb      	str	r3, [r7, #12]

	/* 3. configuration gpio pin pu/pd */
	temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinPuPdCtrl << (2 * pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800048c:	687b      	ldr	r3, [r7, #4]
 800048e:	79db      	ldrb	r3, [r3, #7]
 8000490:	461a      	mov	r2, r3
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	791b      	ldrb	r3, [r3, #4]
 8000496:	005b      	lsls	r3, r3, #1
 8000498:	fa02 f303 	lsl.w	r3, r2, r3
 800049c:	60fb      	str	r3, [r7, #12]
	pGPIOHandler->pGPIO->PUPDR &= ~(0x03 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	681b      	ldr	r3, [r3, #0]
 80004a2:	68da      	ldr	r2, [r3, #12]
 80004a4:	687b      	ldr	r3, [r7, #4]
 80004a6:	791b      	ldrb	r3, [r3, #4]
 80004a8:	4619      	mov	r1, r3
 80004aa:	2303      	movs	r3, #3
 80004ac:	408b      	lsls	r3, r1
 80004ae:	43db      	mvns	r3, r3
 80004b0:	4619      	mov	r1, r3
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	400a      	ands	r2, r1
 80004b8:	60da      	str	r2, [r3, #12]
	pGPIOHandler->pGPIO->PUPDR |= temp;
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	68d9      	ldr	r1, [r3, #12]
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	68fa      	ldr	r2, [r7, #12]
 80004c6:	430a      	orrs	r2, r1
 80004c8:	60da      	str	r2, [r3, #12]
	temp = 0;
 80004ca:	2300      	movs	r3, #0
 80004cc:	60fb      	str	r3, [r7, #12]

	/* 4. configuration gpio pin output type */
	temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinOutputType << (pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	7a1b      	ldrb	r3, [r3, #8]
 80004d2:	461a      	mov	r2, r3
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	791b      	ldrb	r3, [r3, #4]
 80004d8:	fa02 f303 	lsl.w	r3, r2, r3
 80004dc:	60fb      	str	r3, [r7, #12]
	pGPIOHandler->pGPIO->OTYPER &= ~(0x01 << pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber);
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	685a      	ldr	r2, [r3, #4]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	4619      	mov	r1, r3
 80004ea:	2301      	movs	r3, #1
 80004ec:	408b      	lsls	r3, r1
 80004ee:	43db      	mvns	r3, r3
 80004f0:	4619      	mov	r1, r3
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	400a      	ands	r2, r1
 80004f8:	605a      	str	r2, [r3, #4]
	pGPIOHandler->pGPIO->OTYPER |= temp;
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	6859      	ldr	r1, [r3, #4]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	68fa      	ldr	r2, [r7, #12]
 8000506:	430a      	orrs	r2, r1
 8000508:	605a      	str	r2, [r3, #4]
	temp = 0;
 800050a:	2300      	movs	r3, #0
 800050c:	60fb      	str	r3, [r7, #12]

	/* 5. configuration gpio pin alternate function */
	if (pGPIOHandler->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN) {
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	795b      	ldrb	r3, [r3, #5]
 8000512:	2b02      	cmp	r3, #2
 8000514:	d132      	bne.n	800057c <GPIO_Init+0x300>
		reg_selection = pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber / 8; /*total pin = 16*/
 8000516:	687b      	ldr	r3, [r7, #4]
 8000518:	791b      	ldrb	r3, [r3, #4]
 800051a:	08db      	lsrs	r3, r3, #3
 800051c:	72fb      	strb	r3, [r7, #11]
		pin_selection = pGPIOHandler->GPIO_PinConfig.GPIO_PinNumber % 8;
 800051e:	687b      	ldr	r3, [r7, #4]
 8000520:	791b      	ldrb	r3, [r3, #4]
 8000522:	f003 0307 	and.w	r3, r3, #7
 8000526:	72bb      	strb	r3, [r7, #10]
		temp = pGPIOHandler->GPIO_PinConfig.GPIO_PinAltFuncMode << (4 * pin_selection);
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	7a5b      	ldrb	r3, [r3, #9]
 800052c:	461a      	mov	r2, r3
 800052e:	7abb      	ldrb	r3, [r7, #10]
 8000530:	009b      	lsls	r3, r3, #2
 8000532:	fa02 f303 	lsl.w	r3, r2, r3
 8000536:	60fb      	str	r3, [r7, #12]
		pGPIOHandler->pGPIO->AFR[reg_selection] &= ~(0b1111 << (4 * pin_selection));
 8000538:	687b      	ldr	r3, [r7, #4]
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	7afa      	ldrb	r2, [r7, #11]
 800053e:	3208      	adds	r2, #8
 8000540:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000544:	7abb      	ldrb	r3, [r7, #10]
 8000546:	009b      	lsls	r3, r3, #2
 8000548:	220f      	movs	r2, #15
 800054a:	fa02 f303 	lsl.w	r3, r2, r3
 800054e:	43db      	mvns	r3, r3
 8000550:	4618      	mov	r0, r3
 8000552:	687b      	ldr	r3, [r7, #4]
 8000554:	681b      	ldr	r3, [r3, #0]
 8000556:	7afa      	ldrb	r2, [r7, #11]
 8000558:	4001      	ands	r1, r0
 800055a:	3208      	adds	r2, #8
 800055c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandler->pGPIO->AFR[reg_selection] |= temp;
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	7afa      	ldrb	r2, [r7, #11]
 8000566:	3208      	adds	r2, #8
 8000568:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	681b      	ldr	r3, [r3, #0]
 8000570:	7afa      	ldrb	r2, [r7, #11]
 8000572:	68f9      	ldr	r1, [r7, #12]
 8000574:	4301      	orrs	r1, r0
 8000576:	3208      	adds	r2, #8
 8000578:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}
	temp = 0;
 800057c:	2300      	movs	r3, #0
 800057e:	60fb      	str	r3, [r7, #12]

}
 8000580:	bf00      	nop
 8000582:	3714      	adds	r7, #20
 8000584:	46bd      	mov	sp, r7
 8000586:	f85d 7b04 	ldr.w	r7, [sp], #4
 800058a:	4770      	bx	lr
 800058c:	40013800 	.word	0x40013800
 8000590:	40013c00 	.word	0x40013c00

08000594 <GPIO_ReadInputPin>:
			/*do nothing*/
		}

}

uint8_t GPIO_ReadInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber) {
 8000594:	b480      	push	{r7}
 8000596:	b085      	sub	sp, #20
 8000598:	af00      	add	r7, sp, #0
 800059a:	6078      	str	r0, [r7, #4]
 800059c:	460b      	mov	r3, r1
 800059e:	70fb      	strb	r3, [r7, #3]
	uint8_t value=0;
 80005a0:	2300      	movs	r3, #0
 80005a2:	73fb      	strb	r3, [r7, #15]
	value = (uint8_t) (pGPIOx->IDR >> PinNumber) & 0x00000001;
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	691a      	ldr	r2, [r3, #16]
 80005a8:	78fb      	ldrb	r3, [r7, #3]
 80005aa:	fa22 f303 	lsr.w	r3, r2, r3
 80005ae:	b2db      	uxtb	r3, r3
 80005b0:	f003 0301 	and.w	r3, r3, #1
 80005b4:	73fb      	strb	r3, [r7, #15]
	return value;
 80005b6:	7bfb      	ldrb	r3, [r7, #15]
}
 80005b8:	4618      	mov	r0, r3
 80005ba:	3714      	adds	r7, #20
 80005bc:	46bd      	mov	sp, r7
 80005be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c2:	4770      	bx	lr

080005c4 <GPIO_WriteOutputPin>:
	uint16_t value=0;
	value = (uint16_t) (pGPIOx->IDR);
	return value;
}

void GPIO_WriteOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber, uint8_t value) {
 80005c4:	b480      	push	{r7}
 80005c6:	b083      	sub	sp, #12
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	6078      	str	r0, [r7, #4]
 80005cc:	460b      	mov	r3, r1
 80005ce:	70fb      	strb	r3, [r7, #3]
 80005d0:	4613      	mov	r3, r2
 80005d2:	70bb      	strb	r3, [r7, #2]
	if (value == GPIO_PIN_SET) {
 80005d4:	78bb      	ldrb	r3, [r7, #2]
 80005d6:	2b01      	cmp	r3, #1
 80005d8:	d109      	bne.n	80005ee <GPIO_WriteOutputPin+0x2a>
		/*set pin*/
		pGPIOx->ODR |= (1 << PinNumber);
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	695b      	ldr	r3, [r3, #20]
 80005de:	78fa      	ldrb	r2, [r7, #3]
 80005e0:	2101      	movs	r1, #1
 80005e2:	fa01 f202 	lsl.w	r2, r1, r2
 80005e6:	431a      	orrs	r2, r3
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	615a      	str	r2, [r3, #20]
	} else {
		/*reset pin*/
		pGPIOx->ODR &= ~(1 << PinNumber);
	}
}
 80005ec:	e009      	b.n	8000602 <GPIO_WriteOutputPin+0x3e>
		pGPIOx->ODR &= ~(1 << PinNumber);
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	695b      	ldr	r3, [r3, #20]
 80005f2:	78fa      	ldrb	r2, [r7, #3]
 80005f4:	2101      	movs	r1, #1
 80005f6:	fa01 f202 	lsl.w	r2, r1, r2
 80005fa:	43d2      	mvns	r2, r2
 80005fc:	401a      	ands	r2, r3
 80005fe:	687b      	ldr	r3, [r7, #4]
 8000600:	615a      	str	r2, [r3, #20]
}
 8000602:	bf00      	nop
 8000604:	370c      	adds	r7, #12
 8000606:	46bd      	mov	sp, r7
 8000608:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060c:	4770      	bx	lr

0800060e <GPIO_TogglePin>:
void GPIO_WriteOutputPort(GPIO_RegDef_t *pGPIOx, uint16_t value){
	/*write 16bit data to GPIO port*/
	pGPIOx->ODR |= (value);

}
void GPIO_TogglePin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber){
 800060e:	b480      	push	{r7}
 8000610:	b083      	sub	sp, #12
 8000612:	af00      	add	r7, sp, #0
 8000614:	6078      	str	r0, [r7, #4]
 8000616:	460b      	mov	r3, r1
 8000618:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= ( 1 << PinNumber);
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	695b      	ldr	r3, [r3, #20]
 800061e:	78fa      	ldrb	r2, [r7, #3]
 8000620:	2101      	movs	r1, #1
 8000622:	fa01 f202 	lsl.w	r2, r1, r2
 8000626:	405a      	eors	r2, r3
 8000628:	687b      	ldr	r3, [r7, #4]
 800062a:	615a      	str	r2, [r3, #20]
}
 800062c:	bf00      	nop
 800062e:	370c      	adds	r7, #12
 8000630:	46bd      	mov	sp, r7
 8000632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000636:	4770      	bx	lr

08000638 <GPIO_IRQ_ISR_Config>:


void GPIO_IRQ_ISR_Config(uint8_t IRQNumber, uint8_t state) {
 8000638:	b480      	push	{r7}
 800063a:	b083      	sub	sp, #12
 800063c:	af00      	add	r7, sp, #0
 800063e:	4603      	mov	r3, r0
 8000640:	460a      	mov	r2, r1
 8000642:	71fb      	strb	r3, [r7, #7]
 8000644:	4613      	mov	r3, r2
 8000646:	71bb      	strb	r3, [r7, #6]
	if ( state == ENABLE) {
 8000648:	79bb      	ldrb	r3, [r7, #6]
 800064a:	2b01      	cmp	r3, #1
 800064c:	d133      	bne.n	80006b6 <GPIO_IRQ_ISR_Config+0x7e>
		/* Enable interrupt */
		if ( IRQNumber <= 31 ) {
 800064e:	79fb      	ldrb	r3, [r7, #7]
 8000650:	2b1f      	cmp	r3, #31
 8000652:	d80a      	bhi.n	800066a <GPIO_IRQ_ISR_Config+0x32>
			*NVIC_ISER0 |= ( 1 << IRQNumber );
 8000654:	4b35      	ldr	r3, [pc, #212]	; (800072c <GPIO_IRQ_ISR_Config+0xf4>)
 8000656:	681b      	ldr	r3, [r3, #0]
 8000658:	79fa      	ldrb	r2, [r7, #7]
 800065a:	2101      	movs	r1, #1
 800065c:	fa01 f202 	lsl.w	r2, r1, r2
 8000660:	4611      	mov	r1, r2
 8000662:	4a32      	ldr	r2, [pc, #200]	; (800072c <GPIO_IRQ_ISR_Config+0xf4>)
 8000664:	430b      	orrs	r3, r1
 8000666:	6013      	str	r3, [r2, #0]
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
		} else if ( IRQNumber >= 64 && IRQNumber < 96) {
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
		}
	}
}
 8000668:	e059      	b.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
		} else if ( IRQNumber > 31 && IRQNumber < 64) {
 800066a:	79fb      	ldrb	r3, [r7, #7]
 800066c:	2b1f      	cmp	r3, #31
 800066e:	d90f      	bls.n	8000690 <GPIO_IRQ_ISR_Config+0x58>
 8000670:	79fb      	ldrb	r3, [r7, #7]
 8000672:	2b3f      	cmp	r3, #63	; 0x3f
 8000674:	d80c      	bhi.n	8000690 <GPIO_IRQ_ISR_Config+0x58>
			*NVIC_ISER1 |= ( 1 << (IRQNumber % 32) );
 8000676:	4b2e      	ldr	r3, [pc, #184]	; (8000730 <GPIO_IRQ_ISR_Config+0xf8>)
 8000678:	681b      	ldr	r3, [r3, #0]
 800067a:	79fa      	ldrb	r2, [r7, #7]
 800067c:	f002 021f 	and.w	r2, r2, #31
 8000680:	2101      	movs	r1, #1
 8000682:	fa01 f202 	lsl.w	r2, r1, r2
 8000686:	4611      	mov	r1, r2
 8000688:	4a29      	ldr	r2, [pc, #164]	; (8000730 <GPIO_IRQ_ISR_Config+0xf8>)
 800068a:	430b      	orrs	r3, r1
 800068c:	6013      	str	r3, [r2, #0]
 800068e:	e046      	b.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
		} else if ( IRQNumber >= 64 && IRQNumber < 96) {
 8000690:	79fb      	ldrb	r3, [r7, #7]
 8000692:	2b3f      	cmp	r3, #63	; 0x3f
 8000694:	d943      	bls.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
 8000696:	79fb      	ldrb	r3, [r7, #7]
 8000698:	2b5f      	cmp	r3, #95	; 0x5f
 800069a:	d840      	bhi.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
			*NVIC_ISER2 |= ( 1 << (IRQNumber % 64) );
 800069c:	4b25      	ldr	r3, [pc, #148]	; (8000734 <GPIO_IRQ_ISR_Config+0xfc>)
 800069e:	681b      	ldr	r3, [r3, #0]
 80006a0:	79fa      	ldrb	r2, [r7, #7]
 80006a2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80006a6:	2101      	movs	r1, #1
 80006a8:	fa01 f202 	lsl.w	r2, r1, r2
 80006ac:	4611      	mov	r1, r2
 80006ae:	4a21      	ldr	r2, [pc, #132]	; (8000734 <GPIO_IRQ_ISR_Config+0xfc>)
 80006b0:	430b      	orrs	r3, r1
 80006b2:	6013      	str	r3, [r2, #0]
}
 80006b4:	e033      	b.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
		if ( IRQNumber <= 31 ) {
 80006b6:	79fb      	ldrb	r3, [r7, #7]
 80006b8:	2b1f      	cmp	r3, #31
 80006ba:	d80a      	bhi.n	80006d2 <GPIO_IRQ_ISR_Config+0x9a>
			*NVIC_ICER0 |= ( 1 << IRQNumber );
 80006bc:	4b1e      	ldr	r3, [pc, #120]	; (8000738 <GPIO_IRQ_ISR_Config+0x100>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	79fa      	ldrb	r2, [r7, #7]
 80006c2:	2101      	movs	r1, #1
 80006c4:	fa01 f202 	lsl.w	r2, r1, r2
 80006c8:	4611      	mov	r1, r2
 80006ca:	4a1b      	ldr	r2, [pc, #108]	; (8000738 <GPIO_IRQ_ISR_Config+0x100>)
 80006cc:	430b      	orrs	r3, r1
 80006ce:	6013      	str	r3, [r2, #0]
}
 80006d0:	e025      	b.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
		} else if ( IRQNumber > 31 && IRQNumber < 64) {
 80006d2:	79fb      	ldrb	r3, [r7, #7]
 80006d4:	2b1f      	cmp	r3, #31
 80006d6:	d90f      	bls.n	80006f8 <GPIO_IRQ_ISR_Config+0xc0>
 80006d8:	79fb      	ldrb	r3, [r7, #7]
 80006da:	2b3f      	cmp	r3, #63	; 0x3f
 80006dc:	d80c      	bhi.n	80006f8 <GPIO_IRQ_ISR_Config+0xc0>
			*NVIC_ICER1 |= ( 1 << (IRQNumber % 32) );
 80006de:	4b17      	ldr	r3, [pc, #92]	; (800073c <GPIO_IRQ_ISR_Config+0x104>)
 80006e0:	681b      	ldr	r3, [r3, #0]
 80006e2:	79fa      	ldrb	r2, [r7, #7]
 80006e4:	f002 021f 	and.w	r2, r2, #31
 80006e8:	2101      	movs	r1, #1
 80006ea:	fa01 f202 	lsl.w	r2, r1, r2
 80006ee:	4611      	mov	r1, r2
 80006f0:	4a12      	ldr	r2, [pc, #72]	; (800073c <GPIO_IRQ_ISR_Config+0x104>)
 80006f2:	430b      	orrs	r3, r1
 80006f4:	6013      	str	r3, [r2, #0]
 80006f6:	e012      	b.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
		} else if ( IRQNumber >= 64 && IRQNumber < 96) {
 80006f8:	79fb      	ldrb	r3, [r7, #7]
 80006fa:	2b3f      	cmp	r3, #63	; 0x3f
 80006fc:	d90f      	bls.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
 80006fe:	79fb      	ldrb	r3, [r7, #7]
 8000700:	2b5f      	cmp	r3, #95	; 0x5f
 8000702:	d80c      	bhi.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
			*NVIC_ICER2 |= ( 1 << (IRQNumber % 64) );
 8000704:	4b0e      	ldr	r3, [pc, #56]	; (8000740 <GPIO_IRQ_ISR_Config+0x108>)
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	79fa      	ldrb	r2, [r7, #7]
 800070a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 800070e:	2101      	movs	r1, #1
 8000710:	fa01 f202 	lsl.w	r2, r1, r2
 8000714:	4611      	mov	r1, r2
 8000716:	4a0a      	ldr	r2, [pc, #40]	; (8000740 <GPIO_IRQ_ISR_Config+0x108>)
 8000718:	430b      	orrs	r3, r1
 800071a:	6013      	str	r3, [r2, #0]
}
 800071c:	e7ff      	b.n	800071e <GPIO_IRQ_ISR_Config+0xe6>
 800071e:	bf00      	nop
 8000720:	370c      	adds	r7, #12
 8000722:	46bd      	mov	sp, r7
 8000724:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000728:	4770      	bx	lr
 800072a:	bf00      	nop
 800072c:	e000e100 	.word	0xe000e100
 8000730:	e000e104 	.word	0xe000e104
 8000734:	e000e108 	.word	0xe000e108
 8000738:	e000e180 	.word	0xe000e180
 800073c:	e000e184 	.word	0xe000e184
 8000740:	e000e188 	.word	0xe000e188

08000744 <GPIO_IRQ_PRIO_Config>:

void GPIO_IRQ_PRIO_Config(uint8_t IRQNumber, uint8_t IRQPriority) {
 8000744:	b480      	push	{r7}
 8000746:	b085      	sub	sp, #20
 8000748:	af00      	add	r7, sp, #0
 800074a:	4603      	mov	r3, r0
 800074c:	460a      	mov	r2, r1
 800074e:	71fb      	strb	r3, [r7, #7]
 8000750:	4613      	mov	r3, r2
 8000752:	71bb      	strb	r3, [r7, #6]
	uint8_t reg_index = 0; /* 0 - 59 */
 8000754:	2300      	movs	r3, #0
 8000756:	73fb      	strb	r3, [r7, #15]
	uint8_t reg_order = 0; /* 0 - 3 */
 8000758:	2300      	movs	r3, #0
 800075a:	73bb      	strb	r3, [r7, #14]

	reg_index = IRQNumber / 4;
 800075c:	79fb      	ldrb	r3, [r7, #7]
 800075e:	089b      	lsrs	r3, r3, #2
 8000760:	73fb      	strb	r3, [r7, #15]
	reg_order = IRQNumber % 4;
 8000762:	79fb      	ldrb	r3, [r7, #7]
 8000764:	f003 0303 	and.w	r3, r3, #3
 8000768:	73bb      	strb	r3, [r7, #14]
	*( NVIC_IPR_BASEADDR + reg_index ) &= ~( 0xF << (reg_order*8 + 4) );
 800076a:	7bfb      	ldrb	r3, [r7, #15]
 800076c:	009b      	lsls	r3, r3, #2
 800076e:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000772:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000776:	681a      	ldr	r2, [r3, #0]
 8000778:	7bbb      	ldrb	r3, [r7, #14]
 800077a:	00db      	lsls	r3, r3, #3
 800077c:	3304      	adds	r3, #4
 800077e:	210f      	movs	r1, #15
 8000780:	fa01 f303 	lsl.w	r3, r1, r3
 8000784:	43db      	mvns	r3, r3
 8000786:	4619      	mov	r1, r3
 8000788:	7bfb      	ldrb	r3, [r7, #15]
 800078a:	009b      	lsls	r3, r3, #2
 800078c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 8000790:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 8000794:	400a      	ands	r2, r1
 8000796:	601a      	str	r2, [r3, #0]
	*( NVIC_IPR_BASEADDR + reg_index ) |= ( IRQPriority << (reg_order*8 + 4) );
 8000798:	7bfb      	ldrb	r3, [r7, #15]
 800079a:	009b      	lsls	r3, r3, #2
 800079c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80007a0:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80007a4:	681a      	ldr	r2, [r3, #0]
 80007a6:	79b9      	ldrb	r1, [r7, #6]
 80007a8:	7bbb      	ldrb	r3, [r7, #14]
 80007aa:	00db      	lsls	r3, r3, #3
 80007ac:	3304      	adds	r3, #4
 80007ae:	fa01 f303 	lsl.w	r3, r1, r3
 80007b2:	4619      	mov	r1, r3
 80007b4:	7bfb      	ldrb	r3, [r7, #15]
 80007b6:	009b      	lsls	r3, r3, #2
 80007b8:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
 80007bc:	f503 4364 	add.w	r3, r3, #58368	; 0xe400
 80007c0:	430a      	orrs	r2, r1
 80007c2:	601a      	str	r2, [r3, #0]
}
 80007c4:	bf00      	nop
 80007c6:	3714      	adds	r7, #20
 80007c8:	46bd      	mov	sp, r7
 80007ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ce:	4770      	bx	lr

080007d0 <GPIO_IRQHandling>:

void GPIO_IRQHandling(uint8_t PinNumber) {
 80007d0:	b480      	push	{r7}
 80007d2:	b083      	sub	sp, #12
 80007d4:	af00      	add	r7, sp, #0
 80007d6:	4603      	mov	r3, r0
 80007d8:	71fb      	strb	r3, [r7, #7]
	/* Check and clear the EXTI_PR (Pending Register) */
	if (EXTI->PR & (1 << PinNumber)) {
 80007da:	4b0c      	ldr	r3, [pc, #48]	; (800080c <GPIO_IRQHandling+0x3c>)
 80007dc:	695b      	ldr	r3, [r3, #20]
 80007de:	79fa      	ldrb	r2, [r7, #7]
 80007e0:	2101      	movs	r1, #1
 80007e2:	fa01 f202 	lsl.w	r2, r1, r2
 80007e6:	4013      	ands	r3, r2
 80007e8:	2b00      	cmp	r3, #0
 80007ea:	d009      	beq.n	8000800 <GPIO_IRQHandling+0x30>
		/* Clear by program to 1 */
		EXTI->PR |= (1 << PinNumber);
 80007ec:	4b07      	ldr	r3, [pc, #28]	; (800080c <GPIO_IRQHandling+0x3c>)
 80007ee:	695b      	ldr	r3, [r3, #20]
 80007f0:	79fa      	ldrb	r2, [r7, #7]
 80007f2:	2101      	movs	r1, #1
 80007f4:	fa01 f202 	lsl.w	r2, r1, r2
 80007f8:	4611      	mov	r1, r2
 80007fa:	4a04      	ldr	r2, [pc, #16]	; (800080c <GPIO_IRQHandling+0x3c>)
 80007fc:	430b      	orrs	r3, r1
 80007fe:	6153      	str	r3, [r2, #20]
	}
}
 8000800:	bf00      	nop
 8000802:	370c      	adds	r7, #12
 8000804:	46bd      	mov	sp, r7
 8000806:	f85d 7b04 	ldr.w	r7, [sp], #4
 800080a:	4770      	bx	lr
 800080c:	40013c00 	.word	0x40013c00

08000810 <delay>:
#include "stm32f411xx_SPI_driver.h"
//#include "stm32f411xx_GPIO_driver.h"

int8_t btn_status = 1;

void delay(void) {
 8000810:	b480      	push	{r7}
 8000812:	b083      	sub	sp, #12
 8000814:	af00      	add	r7, sp, #0
	for (uint32_t i =0; i < 500000; i++) {
 8000816:	2300      	movs	r3, #0
 8000818:	607b      	str	r3, [r7, #4]
 800081a:	e002      	b.n	8000822 <delay+0x12>
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	3301      	adds	r3, #1
 8000820:	607b      	str	r3, [r7, #4]
 8000822:	687b      	ldr	r3, [r7, #4]
 8000824:	4a04      	ldr	r2, [pc, #16]	; (8000838 <delay+0x28>)
 8000826:	4293      	cmp	r3, r2
 8000828:	d9f8      	bls.n	800081c <delay+0xc>

	}
}
 800082a:	bf00      	nop
 800082c:	bf00      	nop
 800082e:	370c      	adds	r7, #12
 8000830:	46bd      	mov	sp, r7
 8000832:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000836:	4770      	bx	lr
 8000838:	0007a11f 	.word	0x0007a11f

0800083c <main>:

int main(void)
{
 800083c:	b580      	push	{r7, lr}
 800083e:	b086      	sub	sp, #24
 8000840:	af00      	add	r7, sp, #0
	GPIO_Handle_t GPIO_LED, GPIO_BTN;
	memset(&GPIO_LED, 0, sizeof(GPIO_LED));
 8000842:	f107 030c 	add.w	r3, r7, #12
 8000846:	220c      	movs	r2, #12
 8000848:	2100      	movs	r1, #0
 800084a:	4618      	mov	r0, r3
 800084c:	f000 f8a7 	bl	800099e <memset>
	memset(&GPIO_BTN, 0, sizeof(GPIO_BTN));
 8000850:	463b      	mov	r3, r7
 8000852:	220c      	movs	r2, #12
 8000854:	2100      	movs	r1, #0
 8000856:	4618      	mov	r0, r3
 8000858:	f000 f8a1 	bl	800099e <memset>

	GPIO_LED.pGPIO = GPIOC;
 800085c:	4b2f      	ldr	r3, [pc, #188]	; (800091c <main+0xe0>)
 800085e:	60fb      	str	r3, [r7, #12]
	GPIO_LED.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000860:	230d      	movs	r3, #13
 8000862:	743b      	strb	r3, [r7, #16]
	GPIO_LED.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000864:	2301      	movs	r3, #1
 8000866:	747b      	strb	r3, [r7, #17]
	GPIO_LED.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000868:	2302      	movs	r3, #2
 800086a:	74bb      	strb	r3, [r7, #18]
	GPIO_LED.GPIO_PinConfig.GPIO_PinPuPdCtrl = GPIO_PIN_PU;		/* pull-up*/
 800086c:	2301      	movs	r3, #1
 800086e:	74fb      	strb	r3, [r7, #19]
	GPIO_LED.GPIO_PinConfig.GPIO_PinOutputType = GPIO_OUT_PUSHPULL;
 8000870:	2300      	movs	r3, #0
 8000872:	753b      	strb	r3, [r7, #20]
//	GPIO_LED.GPIO_PinConfig.GPIO_PinAltFuncMode = GPIO_SPEED_FAST;
	GPIO_PeriClockCtrl(GPIO_LED.pGPIO, ENABLE);
 8000874:	68fb      	ldr	r3, [r7, #12]
 8000876:	2101      	movs	r1, #1
 8000878:	4618      	mov	r0, r3
 800087a:	f7ff fcad 	bl	80001d8 <GPIO_PeriClockCtrl>
	GPIO_Init(&GPIO_LED);
 800087e:	f107 030c 	add.w	r3, r7, #12
 8000882:	4618      	mov	r0, r3
 8000884:	f7ff fcfa 	bl	800027c <GPIO_Init>

	GPIO_BTN.pGPIO = GPIOA;
 8000888:	4b25      	ldr	r3, [pc, #148]	; (8000920 <main+0xe4>)
 800088a:	603b      	str	r3, [r7, #0]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_0;
 800088c:	2300      	movs	r3, #0
 800088e:	713b      	strb	r3, [r7, #4]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;
 8000890:	2304      	movs	r3, #4
 8000892:	717b      	strb	r3, [r7, #5]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000894:	2302      	movs	r3, #2
 8000896:	71bb      	strb	r3, [r7, #6]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinPuPdCtrl = GPIO_PIN_PU;		/* pull-up*/
 8000898:	2301      	movs	r3, #1
 800089a:	71fb      	strb	r3, [r7, #7]
	GPIO_BTN.GPIO_PinConfig.GPIO_PinOutputType = GPIO_OUT_PUSHPULL;
 800089c:	2300      	movs	r3, #0
 800089e:	723b      	strb	r3, [r7, #8]

	GPIO_PeriClockCtrl(GPIO_BTN.pGPIO, ENABLE);
 80008a0:	683b      	ldr	r3, [r7, #0]
 80008a2:	2101      	movs	r1, #1
 80008a4:	4618      	mov	r0, r3
 80008a6:	f7ff fc97 	bl	80001d8 <GPIO_PeriClockCtrl>
	GPIO_Init(&GPIO_BTN);
 80008aa:	463b      	mov	r3, r7
 80008ac:	4618      	mov	r0, r3
 80008ae:	f7ff fce5 	bl	800027c <GPIO_Init>
	/*interrupt configure*/
	GPIO_IRQ_ISR_Config(IRQ_NO_EXTI0, ENABLE);
 80008b2:	2101      	movs	r1, #1
 80008b4:	2006      	movs	r0, #6
 80008b6:	f7ff febf 	bl	8000638 <GPIO_IRQ_ISR_Config>
	GPIO_IRQ_PRIO_Config(IRQ_NO_EXTI0, IRQ_PRIO_3);
 80008ba:	2103      	movs	r1, #3
 80008bc:	2006      	movs	r0, #6
 80008be:	f7ff ff41 	bl	8000744 <GPIO_IRQ_PRIO_Config>
    /* Loop forever */
//	for(;;);
//	uint8_t btn_status = 1;
	while(1) {
		GPIO_TogglePin(GPIO_LED.pGPIO, GPIO_LED.GPIO_PinConfig.GPIO_PinNumber);
 80008c2:	68fb      	ldr	r3, [r7, #12]
 80008c4:	7c3a      	ldrb	r2, [r7, #16]
 80008c6:	4611      	mov	r1, r2
 80008c8:	4618      	mov	r0, r3
 80008ca:	f7ff fea0 	bl	800060e <GPIO_TogglePin>
		if ( !GPIO_ReadInputPin(GPIO_BTN.pGPIO, GPIO_PIN_NO_0) ) {
 80008ce:	683b      	ldr	r3, [r7, #0]
 80008d0:	2100      	movs	r1, #0
 80008d2:	4618      	mov	r0, r3
 80008d4:	f7ff fe5e 	bl	8000594 <GPIO_ReadInputPin>
 80008d8:	4603      	mov	r3, r0
 80008da:	2b00      	cmp	r3, #0
 80008dc:	d10a      	bne.n	80008f4 <main+0xb8>
			/*press down*/
			delay();
 80008de:	f7ff ff97 	bl	8000810 <delay>
			btn_status = -btn_status;
 80008e2:	4b10      	ldr	r3, [pc, #64]	; (8000924 <main+0xe8>)
 80008e4:	f993 3000 	ldrsb.w	r3, [r3]
 80008e8:	b2db      	uxtb	r3, r3
 80008ea:	425b      	negs	r3, r3
 80008ec:	b2db      	uxtb	r3, r3
 80008ee:	b25a      	sxtb	r2, r3
 80008f0:	4b0c      	ldr	r3, [pc, #48]	; (8000924 <main+0xe8>)
 80008f2:	701a      	strb	r2, [r3, #0]

		}

		if ( btn_status == 1 ) {
 80008f4:	4b0b      	ldr	r3, [pc, #44]	; (8000924 <main+0xe8>)
 80008f6:	f993 3000 	ldrsb.w	r3, [r3]
 80008fa:	2b01      	cmp	r3, #1
 80008fc:	d106      	bne.n	800090c <main+0xd0>
			GPIO_WriteOutputPin(GPIO_LED.pGPIO, GPIO_PIN_NO_13, GPIO_PIN_SET);
 80008fe:	68fb      	ldr	r3, [r7, #12]
 8000900:	2201      	movs	r2, #1
 8000902:	210d      	movs	r1, #13
 8000904:	4618      	mov	r0, r3
 8000906:	f7ff fe5d 	bl	80005c4 <GPIO_WriteOutputPin>
 800090a:	e7da      	b.n	80008c2 <main+0x86>
		} else {
			GPIO_WriteOutputPin(GPIO_LED.pGPIO, GPIO_PIN_NO_13, GPIO_PIN_RESET);
 800090c:	68fb      	ldr	r3, [r7, #12]
 800090e:	2200      	movs	r2, #0
 8000910:	210d      	movs	r1, #13
 8000912:	4618      	mov	r0, r3
 8000914:	f7ff fe56 	bl	80005c4 <GPIO_WriteOutputPin>
		GPIO_TogglePin(GPIO_LED.pGPIO, GPIO_LED.GPIO_PinConfig.GPIO_PinNumber);
 8000918:	e7d3      	b.n	80008c2 <main+0x86>
 800091a:	bf00      	nop
 800091c:	40020800 	.word	0x40020800
 8000920:	40020000 	.word	0x40020000
 8000924:	20000000 	.word	0x20000000

08000928 <EXTI0_IRQHandler>:
		}
//		delay();
	}
}

void EXTI0_IRQHandler(void) {
 8000928:	b580      	push	{r7, lr}
 800092a:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_0);
 800092c:	2000      	movs	r0, #0
 800092e:	f7ff ff4f 	bl	80007d0 <GPIO_IRQHandling>
	btn_status = -btn_status;
 8000932:	4b05      	ldr	r3, [pc, #20]	; (8000948 <EXTI0_IRQHandler+0x20>)
 8000934:	f993 3000 	ldrsb.w	r3, [r3]
 8000938:	b2db      	uxtb	r3, r3
 800093a:	425b      	negs	r3, r3
 800093c:	b2db      	uxtb	r3, r3
 800093e:	b25a      	sxtb	r2, r3
 8000940:	4b01      	ldr	r3, [pc, #4]	; (8000948 <EXTI0_IRQHandler+0x20>)
 8000942:	701a      	strb	r2, [r3, #0]
}
 8000944:	bf00      	nop
 8000946:	bd80      	pop	{r7, pc}
 8000948:	20000000 	.word	0x20000000

0800094c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800094c:	480d      	ldr	r0, [pc, #52]	; (8000984 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800094e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000950:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000954:	480c      	ldr	r0, [pc, #48]	; (8000988 <LoopForever+0x6>)
  ldr r1, =_edata
 8000956:	490d      	ldr	r1, [pc, #52]	; (800098c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000958:	4a0d      	ldr	r2, [pc, #52]	; (8000990 <LoopForever+0xe>)
  movs r3, #0
 800095a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800095c:	e002      	b.n	8000964 <LoopCopyDataInit>

0800095e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800095e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000960:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000962:	3304      	adds	r3, #4

08000964 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000964:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000966:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000968:	d3f9      	bcc.n	800095e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800096a:	4a0a      	ldr	r2, [pc, #40]	; (8000994 <LoopForever+0x12>)
  ldr r4, =_ebss
 800096c:	4c0a      	ldr	r4, [pc, #40]	; (8000998 <LoopForever+0x16>)
  movs r3, #0
 800096e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000970:	e001      	b.n	8000976 <LoopFillZerobss>

08000972 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000972:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000974:	3204      	adds	r2, #4

08000976 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000976:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000978:	d3fb      	bcc.n	8000972 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800097a:	f000 f819 	bl	80009b0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800097e:	f7ff ff5d 	bl	800083c <main>

08000982 <LoopForever>:

LoopForever:
  b LoopForever
 8000982:	e7fe      	b.n	8000982 <LoopForever>
  ldr   r0, =_estack
 8000984:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000988:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800098c:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 8000990:	08000a18 	.word	0x08000a18
  ldr r2, =_sbss
 8000994:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 8000998:	20000020 	.word	0x20000020

0800099c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800099c:	e7fe      	b.n	800099c <ADC_IRQHandler>

0800099e <memset>:
 800099e:	4402      	add	r2, r0
 80009a0:	4603      	mov	r3, r0
 80009a2:	4293      	cmp	r3, r2
 80009a4:	d100      	bne.n	80009a8 <memset+0xa>
 80009a6:	4770      	bx	lr
 80009a8:	f803 1b01 	strb.w	r1, [r3], #1
 80009ac:	e7f9      	b.n	80009a2 <memset+0x4>
	...

080009b0 <__libc_init_array>:
 80009b0:	b570      	push	{r4, r5, r6, lr}
 80009b2:	4d0d      	ldr	r5, [pc, #52]	; (80009e8 <__libc_init_array+0x38>)
 80009b4:	4c0d      	ldr	r4, [pc, #52]	; (80009ec <__libc_init_array+0x3c>)
 80009b6:	1b64      	subs	r4, r4, r5
 80009b8:	10a4      	asrs	r4, r4, #2
 80009ba:	2600      	movs	r6, #0
 80009bc:	42a6      	cmp	r6, r4
 80009be:	d109      	bne.n	80009d4 <__libc_init_array+0x24>
 80009c0:	4d0b      	ldr	r5, [pc, #44]	; (80009f0 <__libc_init_array+0x40>)
 80009c2:	4c0c      	ldr	r4, [pc, #48]	; (80009f4 <__libc_init_array+0x44>)
 80009c4:	f000 f818 	bl	80009f8 <_init>
 80009c8:	1b64      	subs	r4, r4, r5
 80009ca:	10a4      	asrs	r4, r4, #2
 80009cc:	2600      	movs	r6, #0
 80009ce:	42a6      	cmp	r6, r4
 80009d0:	d105      	bne.n	80009de <__libc_init_array+0x2e>
 80009d2:	bd70      	pop	{r4, r5, r6, pc}
 80009d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80009d8:	4798      	blx	r3
 80009da:	3601      	adds	r6, #1
 80009dc:	e7ee      	b.n	80009bc <__libc_init_array+0xc>
 80009de:	f855 3b04 	ldr.w	r3, [r5], #4
 80009e2:	4798      	blx	r3
 80009e4:	3601      	adds	r6, #1
 80009e6:	e7f2      	b.n	80009ce <__libc_init_array+0x1e>
 80009e8:	08000a10 	.word	0x08000a10
 80009ec:	08000a10 	.word	0x08000a10
 80009f0:	08000a10 	.word	0x08000a10
 80009f4:	08000a14 	.word	0x08000a14

080009f8 <_init>:
 80009f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009fa:	bf00      	nop
 80009fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80009fe:	bc08      	pop	{r3}
 8000a00:	469e      	mov	lr, r3
 8000a02:	4770      	bx	lr

08000a04 <_fini>:
 8000a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a06:	bf00      	nop
 8000a08:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000a0a:	bc08      	pop	{r3}
 8000a0c:	469e      	mov	lr, r3
 8000a0e:	4770      	bx	lr
